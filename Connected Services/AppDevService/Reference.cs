//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AppDevService
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AppDevService.AppDevServiceSoap")]
    public interface AppDevServiceSoap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LogIntDispute", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> LogIntDisputeAsync(
                    string bra_code, 
                    string cusnum, 
                    string cusname, 
                    string email, 
                    string phoneno, 
                    string curcode, 
                    string ledcode, 
                    string subacctcode, 
                    decimal trans_amt, 
                    string transdate, 
                    int channel, 
                    int cardtype, 
                    string pan, 
                    string stan, 
                    string mercht, 
                    int trans_type, 
                    decimal billamt, 
                    System.DateTime datelogged, 
                    int orig_bracode, 
                    int currency, 
                    int resolution, 
                    System.DateTime resolution_date, 
                    string tick, 
                    string ComplaintType, 
                    string GoodsDescription, 
                    string MerchantAttempt, 
                    string MerchantResolution);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LogMobileMoney", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> LogMobileMoneyAsync(
                    string bra_code, 
                    string cusnum, 
                    string curcode, 
                    string ledcode, 
                    string subacctcode, 
                    decimal trans_amt, 
                    decimal amt_disp, 
                    decimal amt_due, 
                    string transdate, 
                    string stan, 
                    string userid, 
                    int platform, 
                    string bank, 
                    string status, 
                    string errtype, 
                    string pan, 
                    string mercht, 
                    string settled, 
                    System.DateTime datelogged, 
                    string acctname, 
                    string smart_card_no, 
                    string phoneno, 
                    string network, 
                    string atmlocate, 
                    string atmbranch, 
                    string cusname, 
                    string benphone, 
                    string benacctno, 
                    string refid, 
                    int orig_bracode, 
                    string uptick, 
                    string transdetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NewCase_SMEHUB", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> NewCase_SMEHUBAsync(string sessionid, string processid, string taskid, AppDevService.ParameterValue[] newcaseParameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBillPaymentAgregatorByID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetBillPaymentAgregatorByIDAsync(int AgreegatorID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CardTransactions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> CardTransactionsAsync(string bracode, string cus_num, string cur_code, string led_code, string sub_acct, string pan, System.DateTime begin, System.DateTime end, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AccountupdateviaPM", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ObjectResponse> AccountupdateviaPMAsync(string accountNo, string requesttype, string DOB, string Occupation, string marital, string address, string channel, string docIDs, string gender);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InitiateAccountUpdateRequest2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> InitiateAccountUpdateRequest2Async(
                    string RequestType, 
                    string FirstName, 
                    string LastName, 
                    string IDCard, 
                    string AddressLine1, 
                    string AddressLine2, 
                    string EmailAddress, 
                    string MobileNumber, 
                    string AccountNumber, 
                    string UserID, 
                    string update_status, 
                    string MaritalStatus, 
                    string Occupation, 
                    string Gender, 
                    string DOB, 
                    string update_by);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferFunds_Cal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> TransferFunds_CalAsync(string Acct_fro, string Acct_to, double Amount, string type, int EXPL_CODE, string channel, string Remarks, int origtbraCode, string docAlp, int supervisorID, int tellerID, string transUniqIndenf, string bankCode, string docNum, string inp_Period);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateNIPTransactionForReversal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<long> UpdateNIPTransactionForReversalAsync(string sessionID, string userID, string batchID, string reversalType, System.DateTime dtReqDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GiroOutwardNIPRevReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GiroOutwardNIPRevReportAsync(string sessionID, string dateFrom, string dateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReturnNIPTransfersForApproval", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> ReturnNIPTransfersForApprovalAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReturnNIPTransfersForApprovalByBatchID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> ReturnNIPTransfersForApprovalByBatchIDAsync(string batchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateNIPTransactionsForApproval", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<long> UpdateNIPTransactionsForApprovalAsync(string sessionID, string userID, int authorizationType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FirstLevelCheckTransactionsForReversals", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> FirstLevelCheckTransactionsForReversalsAsync(string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SecondLevelCheckTransactionsForReversals", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> SecondLevelCheckTransactionsForReversalsAsync(string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReturnNIPBasisDebitTransactions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> ReturnNIPBasisDebitTransactionsAsync(string bracode, string cusnum, string curcode, string ledcode, string subacctcode, string formattedDate, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ATM_HotlistCard", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ObjectATMHotlist> ATM_HotlistCardAsync(string phone, string pin, string terminalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FetchSMEMerchantDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> FetchSMEMerchantDetailAsync(string gtpayid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/creditCardEligibiltyCheck", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> creditCardEligibiltyCheckAsync(string bra_code, string cus_num);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MaxAdvanceEligibityDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> MaxAdvanceEligibityDetailsAsync(double intrate, string tenor, double monthSalAmount, double debitServiceRatio, string channel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/APRandRepaymentAmountForMaxAdvance", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> APRandRepaymentAmountForMaxAdvanceAsync(double intrate, string tenor, double managementfee, double commitmentfee, double insurancerate, double loanAmt, string channel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NewCasePM", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> NewCasePMAsync(string sessionid, string processid, string taskid, AppDevService.objectMultiSelect newcaseParameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetExchangeRate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.GetExchangeRateResponseGetExchangeRateResult> GetExchangeRateAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WeFundRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.WefundResponse> WeFundRequestAsync(AppDevService.WeFund Request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WeFundUpdate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.WefundResponse> WeFundUpdateAsync(AppDevService.WefundUpdate Request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WeFundDelete", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.WefundResponse> WeFundDeleteAsync(AppDevService.WeFund Request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WeFundView", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> WeFundViewAsync(AppDevService.WeFund Request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetWeFundByAccountNumber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetWeFundByAccountNumberAsync(string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetWeFundByAccountNumberAdmin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetWeFundByAccountNumberAdminAsync(string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckWefundID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> CheckWefundIDAsync(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPendingWefund", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetPendingWefundAsync(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WeFundAccept", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.WefundResponse> WeFundAcceptAsync(AppDevService.WeFund request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WeFundWithdrawal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.WefundResponse> WeFundWithdrawalAsync(string userid, string targetAccount, double Amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCardStatusRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetCardStatusRequestAsync(string cardid, string expdate, string userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRecentRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetRecentRequestAsync(string userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetCardStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> SetCardStatusAsync(string cardstatus, string userid, string channel, string reason, string blockedTy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateCountryStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> UpdateCountryStatusAsync(string userid, string Country, string EnableDisable, string channel, string reason, string blockedTy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetPaymentChannel", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> SetPaymentChannelAsync(string userid, string cardpresent, string cardnotpresent, string channel, string reason, string blockedTy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetTransactionLocalty", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> SetTransactionLocaltyAsync(string userid, int local, int international, string channel, string reason, string blockedTy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConfirmReference", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ConfirmReferenceAsync(string cardid, string userid, string expdate, string atmStatus, string posStatus, string webStatus, string pan, string channel, string reason, string blockedTy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RelationshipLetviaPM", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ObjectResponse> RelationshipLetviaPMAsync(
                    string accountNo, 
                    string title, 
                    string coyname, 
                    string lettertype, 
                    string address1, 
                    string address2, 
                    string town, 
                    string copy, 
                    string city, 
                    string benename, 
                    string projname, 
                    string pickupbranch, 
                    string pickupmethod, 
                    string pickupmode, 
                    string proxyname, 
                    string ident, 
                    string comment, 
                    string channel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InitiateIReferNRN", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> InitiateIReferNRNAsync(int braCode, int cusnum, string Referred_name, string Referred_mobileno, string Referred_email, string Channel, string initiator, string nubannumber, string Referred_country, string Requesttype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLocation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.GetLocationResponseGetLocationResult> GetLocationAsync(string ipaddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetWebCollectionFormFields", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetWebCollectionFormFieldsAsync(int formid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCollectionFormFieldDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetCollectionFormFieldDetailsAsync(int customerid, int formid, AppDevService.ArrayOfXElement dt_fieldset, string channel, string debitAcct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCollectionTransactionsByUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetCollectionTransactionsByUserAsync(int formid, string userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateGTCollectionGTPayTransaction", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> UpdateGTCollectionGTPayTransactionAsync(int transid, string transstatus, string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PostCollectionData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> PostCollectionDataAsync(
                    int customer_id, 
                    int CollFormID, 
                    string userid, 
                    string postingbranchcode, 
                    decimal tra_amt, 
                    string narration, 
                    string customer_acct, 
                    string pptno, 
                    string fname, 
                    string lname, 
                    string dob, 
                    string phoneno, 
                    string visa_cat, 
                    string cat_name, 
                    string emb_code, 
                    string emb_name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PostCollectionData_new", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> PostCollectionData_newAsync(
                    int customer_id, 
                    int CollFormID, 
                    string coll_acct, 
                    string userid, 
                    string postingbranchcode, 
                    decimal tra_amt, 
                    string paymentmode, 
                    string tellersuspacct, 
                    string customer_acct, 
                    string trans_type, 
                    int doc_num, 
                    string posref, 
                    string custom_receipt, 
                    string startdate_str, 
                    string enddate_str, 
                    int frequency, 
                    string postflag, 
                    AppDevService.ArrayOfXElement dt_dset);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateCollectionData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> UpdateCollectionDataAsync(decimal transactionid, string transreference);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PostCollectionData_GTChurch", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> PostCollectionData_GTChurchAsync(int customer_id, int CollFormID, string userid, decimal tra_amt, string narration, string customer_acct, string mem_name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferFunds_TranSeqCommit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> TransferFunds_TranSeqCommitAsync(string Acct_fro, string Acct_to, double Amount, string type, int EXPL_CODE, string channel, string Remarks, int origtbraCode, string docAlp, int supervisorID, int tellerID, string transUniqIndenf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferGTBChequesTransSeqCommit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> TransferGTBChequesTransSeqCommitAsync(string Acct_fro, string Acct_to, double Amount, string type, string channel, string Remarks, int docnum, short identifier, short bankcode, short days, string docAlp, int supervisorID, int tellerID, int origtbraCode, string transUniqIndenf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ExecuteBasisQuery", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> ExecuteBasisQueryAsync(string quer, int db);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Basis_Transfer_Errors", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> Basis_Transfer_ErrorsAsync(string errorCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddRestriction", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> AddRestrictionAsync(int tell_id, int branchcode, int customernum, int currencycode, int ledgercode, int subacctcode, int restrictcode, string restricttext);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RemoveRestriction", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> RemoveRestrictionAsync(int tell_id, int branchcode, int customernum, int currencycode, int ledgercode, int subacctcode, int restrictcode, string restricttext, int restrictionseq, int opetype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BlockFunds_PM", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> BlockFunds_PMAsync(string bracode, string cusnum, string curcode, string ledcode, string subacctcode, string remarks, string tra_amount, string expdate, string tellerid, string blkType, string blkTypeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UnBlockFundimmediate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> UnBlockFundimmediateAsync(int braCode, int cusNum, int curCode, int ledCode, int subAcctCode, int bloSeq, double bloAmt, int tellID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UnBlockFundbatch", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> UnBlockFundbatchAsync(int braCode, int cusNum, int curCode, int ledCode, int subAcctCode, int bloSeq, double bloAmt, int tellID, System.DateTime eff_Date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PostCollectionData_Others", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> PostCollectionData_OthersAsync(int ussdcode, int merchantcode, int atmcode, string channel, string userid, decimal tra_amt, decimal total_tra_amt, string narration, string customer_acct, string customercode, string customername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCollectionFormByUSSDCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetCollectionFormByUSSDCodeAsync(int ussdcode, int merchantcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCollectionFormByATMCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetCollectionFormByATMCodeAsync(int atmcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUSSDCollectionFormFields", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetUSSDCollectionFormFieldsAsync(int ussdcode, int merchantcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetATMCollectionFormFields", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetATMCollectionFormFieldsAsync(int atmcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferFund3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> TransferFund3Async(string Acct_fro, string Acct_to, double Amount, string type, int EXPL_CODE, string channel, string Remarks);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCollectionFormFieldDetails_others", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetCollectionFormFieldDetails_othersAsync(string debAcct, string channel, int merchantcode, int ussdcode, int atmcode, string customercode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendEmail_Attachment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.SendEmail_AttachmentResponse> SendEmail_AttachmentAsync(AppDevService.SendEmail_AttachmentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BankPort", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> BankPortAsync(string bvn, string mobilenumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GenerateOTP", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GenerateOTPAsync(int braCode, int cusNum, string channel, int otpLength, string transID, string terminalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidateOTP", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ValidateOTPAsync(int braCode, int cusNum, string OTP, string transID, string terminalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidateAdminUserOffSiteWithIP", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ValidateAdminUserOffSiteWithIPAsync(string userid, string password, int appid, string ipAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidateEncryptedAdminUserOffSiteWithIP", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ValidateEncryptedAdminUserOffSiteWithIPAsync(string userid, string password, string code, int appid, string ipAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidateAdminUsr", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ValidateAdminUsrAsync(string userid, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidateAdminUserWithIP", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ValidateAdminUserWithIPAsync(string userid, string password, int appid, string ipAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidateEncryptedAdminUserWithIP", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ValidateEncryptedAdminUserWithIPAsync(string userid, string password, string code, int appid, string ipAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLastLoginTime", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetLastLoginTimeAsync(string userid, int appid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BVNLinkerHelperOther", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> BVNLinkerHelperOtherAsync(
                    string userID, 
                    string BVN, 
                    string FirstName, 
                    string bankcode, 
                    string LastName, 
                    string PhoneNumber, 
                    string RegistrationDate, 
                    string EnrollmentBank, 
                    string channel, 
                    string nuban, 
                    string MiddleName, 
                    string DateOfBirth, 
                    string sign, 
                    string platformid, 
                    string EnrollmentBranch, 
                    string domainName, 
                    string ipAdd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GTGuardEnableIntlTrx", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> GTGuardEnableIntlTrxAsync(string pPAN, string pExpiry, string pAction, string channel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GTGuardCardStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GTGuardCardStatusAsync(string pPAN, string Expiry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LocalTransfer_ATM", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> LocalTransfer_ATMAsync(string benNUBAN, double amount, double charge, double vat, string acctToDebitTransfer, int expl_Code, string transRef, string chargeAcc, int expl_Code_charge, int expl_Code_Vat, string vatAcc, double vatAmount, string exemptCharge);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> IRequestAsync(
                    int bracode, 
                    int cusnum, 
                    string CusName, 
                    decimal TransactionAmt, 
                    string remarks, 
                    string pan, 
                    int NoOfLeaves, 
                    string ChargeAcct, 
                    string StmtAcct, 
                    string StartDate, 
                    string EndDate, 
                    int NoOfCopies, 
                    int ReqType, 
                    string requestID, 
                    int PreferredBranch, 
                    string InitiatedBy, 
                    string pickUpBy, 
                    string MeansID, 
                    string channel, 
                    string docalp, 
                    string PickName, 
                    AppDevService.StatementRequest[] lstStatement, 
                    string Pickupmethod);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CancelIRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> CancelIRequestAsync(long RefCode, string update_by, int bracode, int cusnum, string reason, string cancel_channel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConfirmIRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ConfirmIRequestAsync(int requestType, long RefCode, string Updated_By, string tellerTill, int opsHeadBraCode, int tellerBasisID, int supervisorBasisID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AcknowledgeIRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> AcknowledgeIRequestAsync(long ReqID, string Updated_By, int bracode, int cusnum, int requestType, int sla, int prefbranch, string tokenVal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReturnIrequestStatementDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> ReturnIrequestStatementDetailsAsync(long IRequestID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RetrieveIRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.RetrieveIRequestResponseRetrieveIRequestResult> RetrieveIRequestAsync(int branch, int reqtype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RetrieveIRequest2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.RetrieveIRequest2Response> RetrieveIRequest2Async(AppDevService.RetrieveIRequest2Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RetrieveIRequestByRefCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> RetrieveIRequestByRefCodeAsync(long refCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RetrieveIRequest_UserID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> RetrieveIRequest_UserIDAsync(int bracode, int cusnum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RetrieveIRequest_ByDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> RetrieveIRequest_ByDateAsync(int bracode, int cusnum, System.DateTime fromdate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RetrieveIRequestBranches", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> RetrieveIRequestBranchesAsync(string status, int method);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRequestBranchProfile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> IRequestBranchProfileAsync(int branch, string userid, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReturnIRequestCategories", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> ReturnIRequestCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReturnAllActiveTellersPerBranch", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> ReturnAllActiveTellersPerBranchAsync(int branchCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SelectSMSBankingMenus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> SelectSMSBankingMenusAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProfileSMSBankingMenu", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ServiceResponse> ProfileSMSBankingMenuAsync(string syntax, string menuName, string menuDesc, int flag, int action, long sNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidateUserTokenWithAmount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ValidateUserTokenWithAmountAsync(string userid, string tokenvalue, string purp, string chann, double TransactionAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateSpend2Save", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> CreateSpend2SaveAsync(string requextxml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CancelSpend2Save", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> CancelSpend2SaveAsync(string requextxml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/OpenAdditionalAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> OpenAdditionalAccountAsync(int bracode, int cusnum, int ledcode, int curcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertSpendToSaveDEtailsOnBasis", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> InsertSpendToSaveDEtailsOnBasisAsync(int bracode, int cusnum, int curcode, int ledcode, int subacctcode, decimal savepercent, int opertype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferFund_mob", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> TransferFund_mobAsync(string Acct_fro, string Acct_to, double Amount, string type, string channel, string Remarks, string Remarks_2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCollectionFormFieldDetails2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetCollectionFormFieldDetails2Async(int customerid, int formid, AppDevService.ArrayOfXElement dt_fieldset, string acctid, string ch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetInternationalSpendingLimit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetInternationalSpendingLimitAsync(string bra_code, string cus_num);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GenerateMT942Statement", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.GenerateMT942StatementResponse> GenerateMT942StatementAsync(AppDevService.GenerateMT942StatementRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FXBlotterInsert", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> FXBlotterInsertAsync(
                    string trans_deal_slip, 
                    string form_no, 
                    int sell_buy, 
                    string transtype, 
                    string currency, 
                    string fcy_acct, 
                    decimal fcy_amt, 
                    string ngn_acct, 
                    decimal ngn_equiv, 
                    string lc_ba_no, 
                    string source_fund, 
                    System.DateTime deal_date, 
                    System.DateTime settlement_date, 
                    string prod_type, 
                    string gl_id_no, 
                    string cus_name, 
                    string client_cat, 
                    string status, 
                    string channel, 
                    decimal rate, 
                    string currency2, 
                    decimal fcy_amt2, 
                    string fcy_acct2, 
                    decimal crossRate, 
                    decimal usd_equ, 
                    decimal calypsoRate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FXBlotterPosition", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> FXBlotterPositionAsync(string currency, string channel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertAppLoginDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<long> InsertAppLoginDetailsAsync(string userid, int appid, string ipAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckTransactionExist", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> CheckTransactionExistAsync(string bra_code, string cus_num, string cur_code, string led_code, string sub_acct_code, double tra_amt, string remark, string expl_code, int deb_cre_ind);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidateEncryptedAdminUserOffSiteWithIPDesktop", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ValidateEncryptedAdminUserOffSiteWithIPDesktopAsync(string userid, string password, string code, int appid, string ipAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getuserdetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> getuserdetailsAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateGIROLogin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task updateGIROLoginAsync(string userName, string firstName, string lastName, string loginStartDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateGIROLogout", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task updateGIROLogoutAsync(string userName, string loginstart);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getLastSequence", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<long> getLastSequenceAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RegisterBeneficiary", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> RegisterBeneficiaryAsync(string braCode, string cusNum, string email, string mobilenumber, string benename, string beneAccountNumber, string benBank, string transType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReturnNeftTransactionsForGIRO", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> ReturnNeftTransactionsForGIROAsync(string postDate, string FromTraSeq, string ToTraSeq, int subAcctCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferCal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> TransferCalAsync(string Acct_fro, string Acct_to, double Amount, int expl_code, string Remarks);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MT940_Range", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> MT940_RangeAsync(string cusid, System.DateTime startDate, System.DateTime enDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SalaryAdvanceRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> SalaryAdvanceRequestAsync(string accountnumber, double Amount, string medium);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearchOFACList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> SearchOFACListAsync(string cus_sho_name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidateSwiftBIC", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ValidateSwiftBICAsync(string SwiftBIC);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidateIBAN", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ValidateIBANAsync(string IBAN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateAdditionalAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ObjectResponse> CreateAdditionalAccountAsync(int bra, int cus, int cur, int led, int tell_id, string acctmgr, string acctnat, string collLedCode, string collSubAcc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateAdditionalSubAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> CreateAdditionalSubAccountAsync(int intBraCode, int intCusNum, int intCurCode, int intLedCode, int intTellerID, string strReason, long intUserID, string strChannel, string strCreator, string strDocAlp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidateLoanMasCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ValidateLoanMasCustomerAsync(string bra_code, string cus_num, string loan_led);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AvailRevolvingCredit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> AvailRevolvingCreditAsync(int bra_code, int cus_num, int cur_code, int led_code, int sub_acct_code, int tell_id, double rate, double bal_lim, string mat_date, string channel, string docAlp, string transUniqIndenf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LogDispense", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> LogDispenseAsync(
                    string bra_code, 
                    string cusnum, 
                    string curcode, 
                    string ledcode, 
                    string subacctcode, 
                    decimal trans_amt, 
                    decimal amt_disp, 
                    decimal amt_due, 
                    string transdate, 
                    string stan, 
                    string userid, 
                    int platform, 
                    string bank, 
                    string status, 
                    string errtype, 
                    string pan, 
                    string mercht, 
                    string settled, 
                    System.DateTime datelogged, 
                    string acctname, 
                    string smart_card_no, 
                    string phoneno, 
                    string network, 
                    string atmlocate, 
                    string atmbranch, 
                    string cusname, 
                    string benphone, 
                    string benacctno, 
                    string refid, 
                    int orig_bracode, 
                    string uptick);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddBasisRole", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> AddBasisRoleAsync(string role_desc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddNewTeller", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> AddNewTellerAsync(int BASISID, string Username, string password, int branch_code, string roleid, string UpdateFlag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearchBASISUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> SearchBASISUserAsync(string str, string branch_code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckExternalTransactionFlag", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> CheckExternalTransactionFlagAsync(string ledgercode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AnalyzeFx", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> AnalyzeFxAsync(string acctno, decimal transfer_amt, System.DateTime anal_date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckDailyLimit_FUELCARD", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> CheckDailyLimit_FUELCARDAsync(string acctno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HotlistCard", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> HotlistCardAsync(string pPAN, long pCustomerID, string pExpiry, string pSeqNo, int pResponseCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HotlistCard_ivr", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> HotlistCard_ivrAsync(string pPAN, string pCustomerID, string pExpiry, int hotlistReason);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCardStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetCardStatusAsync(string pPAN, string pCustomerID, string pExpiry, string pSeqNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InitiateStandingInstruction", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> InitiateStandingInstructionAsync(string acctno, int pFreq, System.DateTime p1stPayDate, decimal Amount, System.DateTime pLastPayDate, string pAcctToCredit, string pRemarks);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InitiateStandingInstruction2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> InitiateStandingInstruction2Async(string acctno, int pFreq, string p1stPayDate, decimal Amount, string pLastPayDate, string pAcctToCredit, string pRemarks);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InitiateStandingInstruction_Charge", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> InitiateStandingInstruction_ChargeAsync(string acctno, int pFreq, string p1stPayDate, decimal Amount, string pLastPayDate, string pAcctToCredit, string pRemarks);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CancelStandingInstruction", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> CancelStandingInstructionAsync(string acctno, int pSeq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetStandingInstructionFromBASIS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetStandingInstructionFromBASISAsync(string debit_acctno, string doc_num, string cred_acct, decimal amt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetStandingInstructionFromBASIS2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetStandingInstructionFromBASIS2Async(string debit_acctno, string doc_num, string cred_acct, decimal amt, int basisseq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAuthorizationLimit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<decimal> GetAuthorizationLimitAsync(string adminuserid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RetrieveCardPIN", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> RetrieveCardPINAsync(string userid, string PANDigits, string CardExpiry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendEmailToNewIbankUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> SendEmailToNewIbankUserAsync(long userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GenerateMT940Statement", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.GenerateMT940StatementResponse> GenerateMT940StatementAsync(AppDevService.GenerateMT940StatementRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InitateStandingInstructionForSMSCharge", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> InitateStandingInstructionForSMSChargeAsync(string xmlRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CancellationRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> CancellationRequestAsync(string OrigbraCode, string tellerId, string origttraseq1, string applicationid, string tellerbracode, string cancelreason);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerOpportunity", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetCustomerOpportunityAsync(int braCode, int cusnum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InitiateIRefer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> InitiateIReferAsync(int braCode, int cusnum, string Referred_name, string Referred_mobileno, string Referred_email, string Channel, string initiator, string nubannumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateIRefer2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> UpdateIRefer2Async(long refcode, string updatedby);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateIRefer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> UpdateIReferAsync(long refcode, string updatedby);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBlockedFunds", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.GetBlockedFundsResponseGetBlockedFundsResult> GetBlockedFundsAsync(string bra_code, string cus_num);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBasisBlockedFunds", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.GetBasisBlockedFundsResponseGetBasisBlockedFundsResult> GetBasisBlockedFundsAsync(string bra_code, string cus_num);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBlockedFundsSTAN", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.GetBlockedFundsSTANResponseGetBlockedFundsSTANResult> GetBlockedFundsSTANAsync(string bra_code, string cus_num);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DispenseErrorMain", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> DispenseErrorMainAsync(
                    int branchCode, 
                    int origbraCode, 
                    int cusNum, 
                    int curCode, 
                    int ledCode, 
                    int subacctCode, 
                    decimal tranAmount, 
                    decimal amtDispensed, 
                    string PAN, 
                    string STAN, 
                    string bankNam, 
                    string transacDate, 
                    string merchant, 
                    string userID, 
                    string smartCardNo, 
                    string phoneNo, 
                    string network, 
                    string declineReason, 
                    string errorType, 
                    string GTBATMLocation, 
                    string ATMBranchCode, 
                    string benePhoneNo, 
                    string beneAcctNo, 
                    string refID, 
                    string ticks);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GTCheckIn_Book", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GTCheckIn_BookAsync(string userID, string cusName, string acctNum, string transType, int branchCode, string appointmentDate, string phoneNo, string eMail, string timeSlot, string Medium, string Additional_Request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GTCheckIn_Cancel", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GTCheckIn_CancelAsync(string userID, string refNO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GTCheckIn_Reject", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GTCheckIn_RejectAsync(string userID, string refNo, string rejectedBy, string rejectedReason);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GTTrackIt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.GTTrackItResponseGTTrackItResult> GTTrackItAsync(string trackID, string requestType, string dateFrom, string dateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NubanToOldAccountNumber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> NubanToOldAccountNumberAsync(string NubanAccountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Holidays", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.HolidaysResponseHolidaysResult> HolidaysAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendSMSLubred", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> SendSMSLubredAsync(string mobileNum, string message, string ApplicationName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InitiateAccountUpdateRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> InitiateAccountUpdateRequestAsync(string RequestType, string FirstName, string LastName, string IDCard, string AddressLine1, string AddressLine2, string EmailAddress, string MobileNumber, string AccountNumber, string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAccountManagers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.GetAccountManagersResponseGetAccountManagersResult> GetAccountManagersAsync(string bra_code, string cus_num, string curcode, string ledcode, string subacctcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PopulateDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> PopulateDetailsAsync(string NubanNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConvertToNuban", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ConvertToNubanAsync(string OldAccountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateSalaryAdvanceStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> UpdateSalaryAdvanceStatusAsync(string uuid, string caseid, string status, int delindex);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetReferalCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetReferalCodeAsync(string mobnum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateIRefer3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> UpdateIRefer3Async(long refcode, string updatedby, string nuban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetNumberOfActiveFEPCards", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> GetNumberOfActiveFEPCardsAsync(string bracode, string cusnum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RetrieveAccountUpdateDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> RetrieveAccountUpdateDetailsAsync(string RequestReference);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProcessmakernewCase", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ProcessmakernewCaseAsync(string sessionid, object[] newcaseParameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProcessmakerLogin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ProcessmakerLoginAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProcessmakerRouteCase", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ProcessmakerRouteCaseAsync(string sessionid, string caseid, int delindex);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BVNLinkerHelper", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> BVNLinkerHelperAsync(string userID, string BVN, string FirstName, string bankcode, string LastName, string PhoneNumber, string RegistrationDate, string EnrollmentBank, string channel, string nuban, string MiddleName, string DateOfBirth, string sign, string platformid, string EnrollmentBranch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddRestrictionWithNuban", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> AddRestrictionWithNubanAsync(int tell_id, string nuban, int restrictcode, string restricttext);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetActiveFEPCards", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetActiveFEPCardsAsync(string pCustomerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetInternationalTransactions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.GetInternationalTransactionsResponseGetInternationalTransactionsResult> GetInternationalTransactionsAsync(string bra_code, string cus_num);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTotalInternationalSpending", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetTotalInternationalSpendingAsync(string bra_code, string cus_num);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GenerateCVV", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GenerateCVVAsync(string pan, string expiry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateUtility", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> CreateUtilityAsync(int branchCode, int cusnum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LinkUnlinkCard", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> LinkUnlinkCardAsync(string pPAN, string pSeqNo, string pExpiry, string pAccountID, string pAccountType, string pCurrencyCode, string RequestBy, string pCardVal2, string pUniqueID, string pLinkType, string pTBPostFix);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HotlistVirtualCard", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> HotlistVirtualCardAsync(string pPAN, long pCustomerID, string pExpiry, string pSeqNo, int pResponseCode, string UniqueCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ibank_Onboarding", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> Ibank_OnboardingAsync(string Nuban, string lastfourDigit_PAN, string mobileNo, string channel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCollectionListOfValues", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetCollectionListOfValuesAsync(int lov_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCollectionListOfValues2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.GetCollectionListOfValues2ResponseGetCollectionListOfValues2Result> GetCollectionListOfValues2Async(int lov_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCollectionListOfValueData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetCollectionListOfValueDataAsync(int lov_ID, string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCollectionDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetCollectionDetailsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCollectionCategtories", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetCollectionCategtoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCollectionFormsByCategory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetCollectionFormsByCategoryAsync(int catid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchCollectionFormsByCategory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetBranchCollectionFormsByCategoryAsync(int catid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOnlineCollectionFormsByCategory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetOnlineCollectionFormsByCategoryAsync(int catid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetWebCollectionFormsByCategory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetWebCollectionFormsByCategoryAsync(int catid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCollectionFormsByCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetCollectionFormsByCustomerAsync(int custid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchCollectionFormsByCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetBranchCollectionFormsByCustomerAsync(int custid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOnlineCollectionFormsByCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetOnlineCollectionFormsByCustomerAsync(int custid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetWebCollectionFormsByCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetWebCollectionFormsByCustomerAsync(int custid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCollectionCustomers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetCollectionCustomersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCollectionCustomersByCategory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetCollectionCustomersByCategoryAsync(int cid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCollectionForms", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetCollectionFormsAsync(int custid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCollectionFormByID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetCollectionFormByIDAsync(int formid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCollectionCharges", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetCollectionChargesAsync(int form_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchCollectionCharges", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetBranchCollectionChargesAsync(int form_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOnlineCollectionCharges", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetOnlineCollectionChargesAsync(int form_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetWebCollectionCharges", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetWebCollectionChargesAsync(int form_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCollectionFormFields", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetCollectionFormFieldsAsync(int formid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchCollectionFormFields", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetBranchCollectionFormFieldsAsync(int formid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOnlineCollectionFormFields", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetOnlineCollectionFormFieldsAsync(int formid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RetrieveOrangLocBranches", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> RetrieveOrangLocBranchesAsync(string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/OrangeLocBranchProfile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> OrangeLocBranchProfileAsync(int branch, string userid, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidateUserToken", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ValidateUserTokenAsync(string userid, string tokenvalue, string purp, string chann);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidateAdminUserToken", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ValidateAdminUserTokenAsync(string userid, string tokenvalue, string purp, string chann);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ResetUserToken", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ResetUserTokenAsync(string userid, string tokenvalue, string tokenID, string purp, string chann);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ResetAdminUserToken", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ResetAdminUserTokenAsync(string userid, string tokenvalue, string tokenID, string purp, string chann);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ResetUserToken_OneOff", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ResetUserToken_OneOffAsync(string userid, string tokenID, string purp, string chann);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ResetAdminUserToken_OneOff", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ResetAdminUserToken_OneOffAsync(string userid, string tokenID, string purp, string chann);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/KillMyID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> KillMyIDAsync(int bracode, int tellerid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/KillMyID2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> KillMyID2Async(string userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/KillMyID3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> KillMyID3Async(string userid, string branchcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAccountBalanceTrandate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetAccountBalanceTrandateAsync(string bracode, string cusnum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidateBeneficiaryAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ValidateBeneficiaryAccountAsync(string userid, string benacctno, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidateAdminUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ValidateAdminUserAsync(string userid, string password, int appid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidateEncryptedAdminUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ValidateEncryptedAdminUserAsync(string userid, string password, string code, int appid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidateAdminUserOffSite", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ValidateAdminUserOffSiteAsync(string userid, string password, int appid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidateEncryptedAdminUserOffSite", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ValidateEncryptedAdminUserOffSiteAsync(string userid, string password, string code, int appid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidateUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ValidateUserAsync(string userid, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTurnover", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetTurnoverAsync(string userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAccountBalance", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetAccountBalanceAsync(string bracode, string cusnum, string curcode, string ledcode, string subacctcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetCustomerNameAsync(string bracode, string cusnum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLastTransactionDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetLastTransactionDetailsAsync(int bracode, int cusnum, int curcode, int ledcode, int subacctcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLastAccountStatement", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetLastAccountStatementAsync(int bracode, int cusnum, int curcode, int ledcode, int subacctcode, string custemail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RequestChequeBook", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> RequestChequeBookAsync(int bracode, int cusnum, int curcode, int ledcode, int subacctcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/StopCheque", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> StopChequeAsync(int bracode, int cusnum, int curcode, int ledcode, int subacctcode, int start, int stop, string amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConfirmCheque", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ConfirmChequeAsync(string cust_acct_no, int docnum, decimal amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConfirmCheque2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ConfirmCheque2Async(string cust_acct_no, int docnum, decimal amount, string ChequeDate, string BeneficiaryName, string Remarks);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferFund", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> TransferFundAsync(string Acct_fro, string Acct_to, double Amount, string type, string channel, string Remarks);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferFund2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> TransferFund2Async(string Acct_fro, string Acct_to, double Amount, string type, int EXPL_CODE, string channel, string Remarks, int org_branch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferFund_Prin_Comm_VAT", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> TransferFund_Prin_Comm_VATAsync(string Acct_from, string Acct_to, double Tra_amt, int Expl_code, string Remark, string Req_code, string docnum, int identifier, string VATAccount, string commacct, decimal comm, decimal vat, int commexpl, int vatexpl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckFirstTime", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> CheckFirstTimeAsync(string userid, string Acct_to, decimal Amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Transfer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> TransferAsync(string Acct_fro, string Acct_to, double Amount, int expl_code, string Remarks);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferFund_Cross", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> TransferFund_CrossAsync(string Acct_fro, string Acct_to, double Amount, double rate, double crossrate, string type, string channel, string Remarks);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferCheques", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> TransferChequesAsync(string Acct_fro, string Acct_to, double Amount, string type, string channel, string Remarks, string docnum, short identifier, short bankcode, short days);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferGTBCheques", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> TransferGTBChequesAsync(string Acct_fro, string Acct_to, double Amount, string type, string channel, string Remarks, string docnum, short identifier, short bankcode, short days);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendSMS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> SendSMSAsync(string strmessage, string strMobNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendEmail1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> SendEmail1Async(string sender, string recipient, string EmSuj, string EmMsg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendEmail2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> SendEmail2Async(string sender, string recipient, string EmSuj, string EmMsg, string copy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendSMS2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> SendSMS2Async(string strmessage, string strMobNum, string Application, string SenderName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendEmail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> SendEmailAsync(string subject, string mailmessage, string emailfrom, string emailto, string CCopy, string attachment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendEmail_HTML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> SendEmail_HTMLAsync(string subject, string mailmessage, string emailfrom, string emailto, string CCopy, string attachment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ResetUserPasscode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ResetUserPasscodeAsync(string userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ResetUserPasscodeOther", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ResetUserPasscodeOtherAsync(string userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ChangeUserPasscode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ChangeUserPasscodeAsync(string userid, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ChangeAdminUserPasscode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ChangeAdminUserPasscodeAsync(string userid, string pswd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetApplicationRoleUsers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetApplicationRoleUsersAsync(int roleid, int appid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAdminUserName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetAdminUserNameAsync(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetCustomerDetailsAsync(string userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidateAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ValidateAccountAsync(string userid, string acctno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidateBASISAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ValidateBASISAccountAsync(string acctno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckUserFlag", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> CheckUserFlagAsync(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckBatchRun", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> CheckBatchRunAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ResetUserFlag", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ResetUserFlagAsync(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EncryptData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> EncryptDataAsync(string datavalue, string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DecryptData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> DecryptDataAsync(string datavalue, string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferCTI", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> TransferCTIAsync(string IVRINFO, string CHANID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InitiatePopup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> InitiatePopupAsync(string customerno, string IVRINFO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetIVRINFO", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetIVRINFOAsync(string customerno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetIVRINFO2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetIVRINFO2Async(string customerno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteIVRINFO", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> DeleteIVRINFOAsync(string customerno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/StartCTI", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> StartCTIAsync(string CHANID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LogAdminUserAction", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> LogAdminUserActionAsync(int AppID, string userid, long staffid, string Action);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddNewAdminUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> AddNewAdminUserAsync(string UserID, int BASISID, string Username, string staffid, string password, int branch_code, string emailaddress, string roleid, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateAdminUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> UpdateAdminUserAsync(string UserID, int BASISID, string Username, string staffid, int branch_code, string emailaddress, string roleid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAdminUserDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetAdminUserDetailsAsync(string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearchAdminUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> SearchAdminUserAsync(string str);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllRoles", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetAllRolesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllAdminUsers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetAllAdminUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllBranches", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetAllBranchesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActivateAdminUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ActivateAdminUserAsync(string userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeactivateAdminUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> DeactivateAdminUserAsync(string userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTellerTillAcct", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetTellerTillAcctAsync(string userid, int appid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetBranchInfoAsync(string bcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBasisTellerTillAcct", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetBasisTellerTillAcctAsync(string bracode, string tellerid, string currency);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBasisTellerTillAcct2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetBasisTellerTillAcct2Async(string username, string bracode, string currency);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetZoneAcct", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetZoneAcctAsync(int branch_code, int appid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchAcct", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetBranchAcctAsync(string userid, int appid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchIPAddress", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetBranchIPAddressAsync(string bracode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchIPAddress2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetBranchIPAddress2Async(string userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAdminUserBranchIPAndLocation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetAdminUserBranchIPAndLocationAsync(string userid, string locationIP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllBasisRoles", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetAllBasisRolesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBasisCustomerDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<AppDevService.CustDetRetVal> GetBasisCustomerDetailsAsync(int branch_code, int Customer_no);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllBasisUsers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetAllBasisUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddEoneRole", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> AddEoneRoleAsync(string role_desc);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ParameterValue
    {
        
        private string nameField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CustDetRetVal
    {
        
        private string custdetField;
        
        private object[] pictureField;
        
        private string[] accountsField;
        
        private string[] mandatesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string custdet
        {
            get
            {
                return this.custdetField;
            }
            set
            {
                this.custdetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public object[] picture
        {
            get
            {
                return this.pictureField;
            }
            set
            {
                this.pictureField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        public string[] Accounts
        {
            get
            {
                return this.accountsField;
            }
            set
            {
                this.accountsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=3)]
        public string[] Mandates
        {
            get
            {
                return this.mandatesField;
            }
            set
            {
                this.mandatesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ServiceResponse
    {
        
        private int codeField;
        
        private string responseField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Code
        {
            get
            {
                return this.codeField;
            }
            set
            {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Response
        {
            get
            {
                return this.responseField;
            }
            set
            {
                this.responseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class StatementRequest
    {
        
        private string accountNumberField;
        
        private string dateFromField;
        
        private string dateToField;
        
        private int noOfCopiesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string AccountNumber
        {
            get
            {
                return this.accountNumberField;
            }
            set
            {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string DateFrom
        {
            get
            {
                return this.dateFromField;
            }
            set
            {
                this.dateFromField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string DateTo
        {
            get
            {
                return this.dateToField;
            }
            set
            {
                this.dateToField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int NoOfCopies
        {
            get
            {
                return this.noOfCopiesField;
            }
            set
            {
                this.noOfCopiesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class WefundUpdate
    {
        
        private string typeField;
        
        private string variableField;
        
        private string updateBYField;
        
        private string wefundIDField;
        
        private string userIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Variable
        {
            get
            {
                return this.variableField;
            }
            set
            {
                this.variableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string UpdateBY
        {
            get
            {
                return this.updateBYField;
            }
            set
            {
                this.updateBYField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string WefundID
        {
            get
            {
                return this.wefundIDField;
            }
            set
            {
                this.wefundIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string UserID
        {
            get
            {
                return this.userIDField;
            }
            set
            {
                this.userIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class WefundResponse
    {
        
        private string responseCodeField;
        
        private string responseMessageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ResponseCode
        {
            get
            {
                return this.responseCodeField;
            }
            set
            {
                this.responseCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ResponseMessage
        {
            get
            {
                return this.responseMessageField;
            }
            set
            {
                this.responseMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class WeFund
    {
        
        private string wefundIDField;
        
        private string purposeField;
        
        private string participantAccountNoField;
        
        private string participantNameField;
        
        private int frequencyField;
        
        private double amountField;
        
        private int roleField;
        
        private string channelField;
        
        private string weFundStatusField;
        
        private string initiatedByField;
        
        private System.DateTime initiateDateField;
        
        private System.DateTime startDateField;
        
        private System.DateTime endDateField;
        
        private string updateBYField;
        
        private System.DateTime updateDateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string WefundID
        {
            get
            {
                return this.wefundIDField;
            }
            set
            {
                this.wefundIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Purpose
        {
            get
            {
                return this.purposeField;
            }
            set
            {
                this.purposeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ParticipantAccountNo
        {
            get
            {
                return this.participantAccountNoField;
            }
            set
            {
                this.participantAccountNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string ParticipantName
        {
            get
            {
                return this.participantNameField;
            }
            set
            {
                this.participantNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public int Frequency
        {
            get
            {
                return this.frequencyField;
            }
            set
            {
                this.frequencyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public double Amount
        {
            get
            {
                return this.amountField;
            }
            set
            {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public int Role
        {
            get
            {
                return this.roleField;
            }
            set
            {
                this.roleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string Channel
        {
            get
            {
                return this.channelField;
            }
            set
            {
                this.channelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string WeFundStatus
        {
            get
            {
                return this.weFundStatusField;
            }
            set
            {
                this.weFundStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string InitiatedBy
        {
            get
            {
                return this.initiatedByField;
            }
            set
            {
                this.initiatedByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public System.DateTime InitiateDate
        {
            get
            {
                return this.initiateDateField;
            }
            set
            {
                this.initiateDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public System.DateTime StartDate
        {
            get
            {
                return this.startDateField;
            }
            set
            {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public System.DateTime EndDate
        {
            get
            {
                return this.endDateField;
            }
            set
            {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string UpdateBY
        {
            get
            {
                return this.updateBYField;
            }
            set
            {
                this.updateBYField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public System.DateTime UpdateDate
        {
            get
            {
                return this.updateDateField;
            }
            set
            {
                this.updateDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class objectMultiSelect
    {
        
        private string[] sItemField;
        
        private string[] sValueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public string[] sItem
        {
            get
            {
                return this.sItemField;
            }
            set
            {
                this.sItemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public string[] sValue
        {
            get
            {
                return this.sValueField;
            }
            set
            {
                this.sValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ObjectATMHotlist
    {
        
        private short codeField;
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public short code
        {
            get
            {
                return this.codeField;
            }
            set
            {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string message
        {
            get
            {
                return this.messageField;
            }
            set
            {
                this.messageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ObjectResponse
    {
        
        private short codeField;
        
        private string messageField;
        
        private string smsStatusField;
        
        private string caseidField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public short code
        {
            get
            {
                return this.codeField;
            }
            set
            {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string message
        {
            get
            {
                return this.messageField;
            }
            set
            {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string smsStatus
        {
            get
            {
                return this.smsStatusField;
            }
            set
            {
                this.smsStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string caseid
        {
            get
            {
                return this.caseidField;
            }
            set
            {
                this.caseidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetExchangeRateResponseGetExchangeRateResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetLocationResponseGetLocationResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SendEmail_Attachment", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SendEmail_AttachmentRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string subject;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string mailmessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string emailfrom;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string emailto;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string CCopy;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] contentStream;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public string contentType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public string fileName;
        
        public SendEmail_AttachmentRequest()
        {
        }
        
        public SendEmail_AttachmentRequest(string subject, string mailmessage, string emailfrom, string emailto, string CCopy, byte[] contentStream, string contentType, string fileName)
        {
            this.subject = subject;
            this.mailmessage = mailmessage;
            this.emailfrom = emailfrom;
            this.emailto = emailto;
            this.CCopy = CCopy;
            this.contentStream = contentStream;
            this.contentType = contentType;
            this.fileName = fileName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SendEmail_AttachmentResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SendEmail_AttachmentResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string SendEmail_AttachmentResult;
        
        public SendEmail_AttachmentResponse()
        {
        }
        
        public SendEmail_AttachmentResponse(string SendEmail_AttachmentResult)
        {
            this.SendEmail_AttachmentResult = SendEmail_AttachmentResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class RetrieveIRequestResponseRetrieveIRequestResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RetrieveIRequest2", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RetrieveIRequest2Request
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> refCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> braCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string dateFrom;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string dateTo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ReqType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string status;
        
        public RetrieveIRequest2Request()
        {
        }
        
        public RetrieveIRequest2Request(System.Nullable<long> refCode, System.Nullable<int> braCode, string dateFrom, string dateTo, System.Nullable<int> ReqType, string status)
        {
            this.refCode = refCode;
            this.braCode = braCode;
            this.dateFrom = dateFrom;
            this.dateTo = dateTo;
            this.ReqType = ReqType;
            this.status = status;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RetrieveIRequest2Response", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RetrieveIRequest2Response
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public AppDevService.ArrayOfXElement RetrieveIRequest2Result;
        
        public RetrieveIRequest2Response()
        {
        }
        
        public RetrieveIRequest2Response(AppDevService.ArrayOfXElement RetrieveIRequest2Result)
        {
            this.RetrieveIRequest2Result = RetrieveIRequest2Result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GenerateMT942Statement", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GenerateMT942StatementRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string accountNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string Nuban;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string startdate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string enddate;
        
        public GenerateMT942StatementRequest()
        {
        }
        
        public GenerateMT942StatementRequest(string accountNumber, string Nuban, string startdate, string enddate)
        {
            this.accountNumber = accountNumber;
            this.Nuban = Nuban;
            this.startdate = startdate;
            this.enddate = enddate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GenerateMT942StatementResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GenerateMT942StatementResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GenerateMT942StatementResult;
        
        public GenerateMT942StatementResponse()
        {
        }
        
        public GenerateMT942StatementResponse(byte[] GenerateMT942StatementResult)
        {
            this.GenerateMT942StatementResult = GenerateMT942StatementResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GenerateMT940Statement", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GenerateMT940StatementRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int custid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string accountNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string startdate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string enddate;
        
        public GenerateMT940StatementRequest()
        {
        }
        
        public GenerateMT940StatementRequest(int custid, string accountNumber, string startdate, string enddate)
        {
            this.custid = custid;
            this.accountNumber = accountNumber;
            this.startdate = startdate;
            this.enddate = enddate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GenerateMT940StatementResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GenerateMT940StatementResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GenerateMT940StatementResult;
        
        public GenerateMT940StatementResponse()
        {
        }
        
        public GenerateMT940StatementResponse(byte[] GenerateMT940StatementResult)
        {
            this.GenerateMT940StatementResult = GenerateMT940StatementResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetBlockedFundsResponseGetBlockedFundsResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetBasisBlockedFundsResponseGetBasisBlockedFundsResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetBlockedFundsSTANResponseGetBlockedFundsSTANResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GTTrackItResponseGTTrackItResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class HolidaysResponseHolidaysResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetAccountManagersResponseGetAccountManagersResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetInternationalTransactionsResponseGetInternationalTransactionsResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetCollectionListOfValues2ResponseGetCollectionListOfValues2Result
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public interface AppDevServiceSoapChannel : AppDevService.AppDevServiceSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public partial class AppDevServiceSoapClient : System.ServiceModel.ClientBase<AppDevService.AppDevServiceSoap>, AppDevService.AppDevServiceSoap
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public AppDevServiceSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(AppDevServiceSoapClient.GetBindingForEndpoint(endpointConfiguration), AppDevServiceSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AppDevServiceSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(AppDevServiceSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AppDevServiceSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(AppDevServiceSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AppDevServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<string> LogIntDisputeAsync(
                    string bra_code, 
                    string cusnum, 
                    string cusname, 
                    string email, 
                    string phoneno, 
                    string curcode, 
                    string ledcode, 
                    string subacctcode, 
                    decimal trans_amt, 
                    string transdate, 
                    int channel, 
                    int cardtype, 
                    string pan, 
                    string stan, 
                    string mercht, 
                    int trans_type, 
                    decimal billamt, 
                    System.DateTime datelogged, 
                    int orig_bracode, 
                    int currency, 
                    int resolution, 
                    System.DateTime resolution_date, 
                    string tick, 
                    string ComplaintType, 
                    string GoodsDescription, 
                    string MerchantAttempt, 
                    string MerchantResolution)
        {
            return base.Channel.LogIntDisputeAsync(bra_code, cusnum, cusname, email, phoneno, curcode, ledcode, subacctcode, trans_amt, transdate, channel, cardtype, pan, stan, mercht, trans_type, billamt, datelogged, orig_bracode, currency, resolution, resolution_date, tick, ComplaintType, GoodsDescription, MerchantAttempt, MerchantResolution);
        }
        
        public System.Threading.Tasks.Task<string> LogMobileMoneyAsync(
                    string bra_code, 
                    string cusnum, 
                    string curcode, 
                    string ledcode, 
                    string subacctcode, 
                    decimal trans_amt, 
                    decimal amt_disp, 
                    decimal amt_due, 
                    string transdate, 
                    string stan, 
                    string userid, 
                    int platform, 
                    string bank, 
                    string status, 
                    string errtype, 
                    string pan, 
                    string mercht, 
                    string settled, 
                    System.DateTime datelogged, 
                    string acctname, 
                    string smart_card_no, 
                    string phoneno, 
                    string network, 
                    string atmlocate, 
                    string atmbranch, 
                    string cusname, 
                    string benphone, 
                    string benacctno, 
                    string refid, 
                    int orig_bracode, 
                    string uptick, 
                    string transdetail)
        {
            return base.Channel.LogMobileMoneyAsync(bra_code, cusnum, curcode, ledcode, subacctcode, trans_amt, amt_disp, amt_due, transdate, stan, userid, platform, bank, status, errtype, pan, mercht, settled, datelogged, acctname, smart_card_no, phoneno, network, atmlocate, atmbranch, cusname, benphone, benacctno, refid, orig_bracode, uptick, transdetail);
        }
        
        public System.Threading.Tasks.Task<string> NewCase_SMEHUBAsync(string sessionid, string processid, string taskid, AppDevService.ParameterValue[] newcaseParameters)
        {
            return base.Channel.NewCase_SMEHUBAsync(sessionid, processid, taskid, newcaseParameters);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetBillPaymentAgregatorByIDAsync(int AgreegatorID)
        {
            return base.Channel.GetBillPaymentAgregatorByIDAsync(AgreegatorID);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> CardTransactionsAsync(string bracode, string cus_num, string cur_code, string led_code, string sub_acct, string pan, System.DateTime begin, System.DateTime end, string status)
        {
            return base.Channel.CardTransactionsAsync(bracode, cus_num, cur_code, led_code, sub_acct, pan, begin, end, status);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ObjectResponse> AccountupdateviaPMAsync(string accountNo, string requesttype, string DOB, string Occupation, string marital, string address, string channel, string docIDs, string gender)
        {
            return base.Channel.AccountupdateviaPMAsync(accountNo, requesttype, DOB, Occupation, marital, address, channel, docIDs, gender);
        }
        
        public System.Threading.Tasks.Task<string> InitiateAccountUpdateRequest2Async(
                    string RequestType, 
                    string FirstName, 
                    string LastName, 
                    string IDCard, 
                    string AddressLine1, 
                    string AddressLine2, 
                    string EmailAddress, 
                    string MobileNumber, 
                    string AccountNumber, 
                    string UserID, 
                    string update_status, 
                    string MaritalStatus, 
                    string Occupation, 
                    string Gender, 
                    string DOB, 
                    string update_by)
        {
            return base.Channel.InitiateAccountUpdateRequest2Async(RequestType, FirstName, LastName, IDCard, AddressLine1, AddressLine2, EmailAddress, MobileNumber, AccountNumber, UserID, update_status, MaritalStatus, Occupation, Gender, DOB, update_by);
        }
        
        public System.Threading.Tasks.Task<string> TransferFunds_CalAsync(string Acct_fro, string Acct_to, double Amount, string type, int EXPL_CODE, string channel, string Remarks, int origtbraCode, string docAlp, int supervisorID, int tellerID, string transUniqIndenf, string bankCode, string docNum, string inp_Period)
        {
            return base.Channel.TransferFunds_CalAsync(Acct_fro, Acct_to, Amount, type, EXPL_CODE, channel, Remarks, origtbraCode, docAlp, supervisorID, tellerID, transUniqIndenf, bankCode, docNum, inp_Period);
        }
        
        public System.Threading.Tasks.Task<long> UpdateNIPTransactionForReversalAsync(string sessionID, string userID, string batchID, string reversalType, System.DateTime dtReqDate)
        {
            return base.Channel.UpdateNIPTransactionForReversalAsync(sessionID, userID, batchID, reversalType, dtReqDate);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GiroOutwardNIPRevReportAsync(string sessionID, string dateFrom, string dateTo)
        {
            return base.Channel.GiroOutwardNIPRevReportAsync(sessionID, dateFrom, dateTo);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> ReturnNIPTransfersForApprovalAsync()
        {
            return base.Channel.ReturnNIPTransfersForApprovalAsync();
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> ReturnNIPTransfersForApprovalByBatchIDAsync(string batchID)
        {
            return base.Channel.ReturnNIPTransfersForApprovalByBatchIDAsync(batchID);
        }
        
        public System.Threading.Tasks.Task<long> UpdateNIPTransactionsForApprovalAsync(string sessionID, string userID, int authorizationType)
        {
            return base.Channel.UpdateNIPTransactionsForApprovalAsync(sessionID, userID, authorizationType);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> FirstLevelCheckTransactionsForReversalsAsync(string sessionID)
        {
            return base.Channel.FirstLevelCheckTransactionsForReversalsAsync(sessionID);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> SecondLevelCheckTransactionsForReversalsAsync(string sessionID)
        {
            return base.Channel.SecondLevelCheckTransactionsForReversalsAsync(sessionID);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> ReturnNIPBasisDebitTransactionsAsync(string bracode, string cusnum, string curcode, string ledcode, string subacctcode, string formattedDate, string sessionID)
        {
            return base.Channel.ReturnNIPBasisDebitTransactionsAsync(bracode, cusnum, curcode, ledcode, subacctcode, formattedDate, sessionID);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ObjectATMHotlist> ATM_HotlistCardAsync(string phone, string pin, string terminalId)
        {
            return base.Channel.ATM_HotlistCardAsync(phone, pin, terminalId);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> FetchSMEMerchantDetailAsync(string gtpayid)
        {
            return base.Channel.FetchSMEMerchantDetailAsync(gtpayid);
        }
        
        public System.Threading.Tasks.Task<int> creditCardEligibiltyCheckAsync(string bra_code, string cus_num)
        {
            return base.Channel.creditCardEligibiltyCheckAsync(bra_code, cus_num);
        }
        
        public System.Threading.Tasks.Task<string> MaxAdvanceEligibityDetailsAsync(double intrate, string tenor, double monthSalAmount, double debitServiceRatio, string channel)
        {
            return base.Channel.MaxAdvanceEligibityDetailsAsync(intrate, tenor, monthSalAmount, debitServiceRatio, channel);
        }
        
        public System.Threading.Tasks.Task<string> APRandRepaymentAmountForMaxAdvanceAsync(double intrate, string tenor, double managementfee, double commitmentfee, double insurancerate, double loanAmt, string channel)
        {
            return base.Channel.APRandRepaymentAmountForMaxAdvanceAsync(intrate, tenor, managementfee, commitmentfee, insurancerate, loanAmt, channel);
        }
        
        public System.Threading.Tasks.Task<string> NewCasePMAsync(string sessionid, string processid, string taskid, AppDevService.objectMultiSelect newcaseParameters)
        {
            return base.Channel.NewCasePMAsync(sessionid, processid, taskid, newcaseParameters);
        }
        
        public System.Threading.Tasks.Task<AppDevService.GetExchangeRateResponseGetExchangeRateResult> GetExchangeRateAsync()
        {
            return base.Channel.GetExchangeRateAsync();
        }
        
        public System.Threading.Tasks.Task<AppDevService.WefundResponse> WeFundRequestAsync(AppDevService.WeFund Request)
        {
            return base.Channel.WeFundRequestAsync(Request);
        }
        
        public System.Threading.Tasks.Task<AppDevService.WefundResponse> WeFundUpdateAsync(AppDevService.WefundUpdate Request)
        {
            return base.Channel.WeFundUpdateAsync(Request);
        }
        
        public System.Threading.Tasks.Task<AppDevService.WefundResponse> WeFundDeleteAsync(AppDevService.WeFund Request)
        {
            return base.Channel.WeFundDeleteAsync(Request);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> WeFundViewAsync(AppDevService.WeFund Request)
        {
            return base.Channel.WeFundViewAsync(Request);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetWeFundByAccountNumberAsync(string UserID)
        {
            return base.Channel.GetWeFundByAccountNumberAsync(UserID);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetWeFundByAccountNumberAdminAsync(string UserID)
        {
            return base.Channel.GetWeFundByAccountNumberAdminAsync(UserID);
        }
        
        public System.Threading.Tasks.Task<bool> CheckWefundIDAsync(string ID)
        {
            return base.Channel.CheckWefundIDAsync(ID);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetPendingWefundAsync(string ID)
        {
            return base.Channel.GetPendingWefundAsync(ID);
        }
        
        public System.Threading.Tasks.Task<AppDevService.WefundResponse> WeFundAcceptAsync(AppDevService.WeFund request)
        {
            return base.Channel.WeFundAcceptAsync(request);
        }
        
        public System.Threading.Tasks.Task<AppDevService.WefundResponse> WeFundWithdrawalAsync(string userid, string targetAccount, double Amount)
        {
            return base.Channel.WeFundWithdrawalAsync(userid, targetAccount, Amount);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetCardStatusRequestAsync(string cardid, string expdate, string userid)
        {
            return base.Channel.GetCardStatusRequestAsync(cardid, expdate, userid);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetRecentRequestAsync(string userid)
        {
            return base.Channel.GetRecentRequestAsync(userid);
        }
        
        public System.Threading.Tasks.Task<string> SetCardStatusAsync(string cardstatus, string userid, string channel, string reason, string blockedTy)
        {
            return base.Channel.SetCardStatusAsync(cardstatus, userid, channel, reason, blockedTy);
        }
        
        public System.Threading.Tasks.Task<string> UpdateCountryStatusAsync(string userid, string Country, string EnableDisable, string channel, string reason, string blockedTy)
        {
            return base.Channel.UpdateCountryStatusAsync(userid, Country, EnableDisable, channel, reason, blockedTy);
        }
        
        public System.Threading.Tasks.Task<string> SetPaymentChannelAsync(string userid, string cardpresent, string cardnotpresent, string channel, string reason, string blockedTy)
        {
            return base.Channel.SetPaymentChannelAsync(userid, cardpresent, cardnotpresent, channel, reason, blockedTy);
        }
        
        public System.Threading.Tasks.Task<string> SetTransactionLocaltyAsync(string userid, int local, int international, string channel, string reason, string blockedTy)
        {
            return base.Channel.SetTransactionLocaltyAsync(userid, local, international, channel, reason, blockedTy);
        }
        
        public System.Threading.Tasks.Task<string> ConfirmReferenceAsync(string cardid, string userid, string expdate, string atmStatus, string posStatus, string webStatus, string pan, string channel, string reason, string blockedTy)
        {
            return base.Channel.ConfirmReferenceAsync(cardid, userid, expdate, atmStatus, posStatus, webStatus, pan, channel, reason, blockedTy);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ObjectResponse> RelationshipLetviaPMAsync(
                    string accountNo, 
                    string title, 
                    string coyname, 
                    string lettertype, 
                    string address1, 
                    string address2, 
                    string town, 
                    string copy, 
                    string city, 
                    string benename, 
                    string projname, 
                    string pickupbranch, 
                    string pickupmethod, 
                    string pickupmode, 
                    string proxyname, 
                    string ident, 
                    string comment, 
                    string channel)
        {
            return base.Channel.RelationshipLetviaPMAsync(accountNo, title, coyname, lettertype, address1, address2, town, copy, city, benename, projname, pickupbranch, pickupmethod, pickupmode, proxyname, ident, comment, channel);
        }
        
        public System.Threading.Tasks.Task<string> InitiateIReferNRNAsync(int braCode, int cusnum, string Referred_name, string Referred_mobileno, string Referred_email, string Channel, string initiator, string nubannumber, string Referred_country, string Requesttype)
        {
            return base.Channel.InitiateIReferNRNAsync(braCode, cusnum, Referred_name, Referred_mobileno, Referred_email, Channel, initiator, nubannumber, Referred_country, Requesttype);
        }
        
        public System.Threading.Tasks.Task<AppDevService.GetLocationResponseGetLocationResult> GetLocationAsync(string ipaddress)
        {
            return base.Channel.GetLocationAsync(ipaddress);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetWebCollectionFormFieldsAsync(int formid)
        {
            return base.Channel.GetWebCollectionFormFieldsAsync(formid);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetCollectionFormFieldDetailsAsync(int customerid, int formid, AppDevService.ArrayOfXElement dt_fieldset, string channel, string debitAcct)
        {
            return base.Channel.GetCollectionFormFieldDetailsAsync(customerid, formid, dt_fieldset, channel, debitAcct);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetCollectionTransactionsByUserAsync(int formid, string userID)
        {
            return base.Channel.GetCollectionTransactionsByUserAsync(formid, userID);
        }
        
        public System.Threading.Tasks.Task<int> UpdateGTCollectionGTPayTransactionAsync(int transid, string transstatus, string message)
        {
            return base.Channel.UpdateGTCollectionGTPayTransactionAsync(transid, transstatus, message);
        }
        
        public System.Threading.Tasks.Task<string> PostCollectionDataAsync(
                    int customer_id, 
                    int CollFormID, 
                    string userid, 
                    string postingbranchcode, 
                    decimal tra_amt, 
                    string narration, 
                    string customer_acct, 
                    string pptno, 
                    string fname, 
                    string lname, 
                    string dob, 
                    string phoneno, 
                    string visa_cat, 
                    string cat_name, 
                    string emb_code, 
                    string emb_name)
        {
            return base.Channel.PostCollectionDataAsync(customer_id, CollFormID, userid, postingbranchcode, tra_amt, narration, customer_acct, pptno, fname, lname, dob, phoneno, visa_cat, cat_name, emb_code, emb_name);
        }
        
        public System.Threading.Tasks.Task<string> PostCollectionData_newAsync(
                    int customer_id, 
                    int CollFormID, 
                    string coll_acct, 
                    string userid, 
                    string postingbranchcode, 
                    decimal tra_amt, 
                    string paymentmode, 
                    string tellersuspacct, 
                    string customer_acct, 
                    string trans_type, 
                    int doc_num, 
                    string posref, 
                    string custom_receipt, 
                    string startdate_str, 
                    string enddate_str, 
                    int frequency, 
                    string postflag, 
                    AppDevService.ArrayOfXElement dt_dset)
        {
            return base.Channel.PostCollectionData_newAsync(customer_id, CollFormID, coll_acct, userid, postingbranchcode, tra_amt, paymentmode, tellersuspacct, customer_acct, trans_type, doc_num, posref, custom_receipt, startdate_str, enddate_str, frequency, postflag, dt_dset);
        }
        
        public System.Threading.Tasks.Task<string> UpdateCollectionDataAsync(decimal transactionid, string transreference)
        {
            return base.Channel.UpdateCollectionDataAsync(transactionid, transreference);
        }
        
        public System.Threading.Tasks.Task<string> PostCollectionData_GTChurchAsync(int customer_id, int CollFormID, string userid, decimal tra_amt, string narration, string customer_acct, string mem_name)
        {
            return base.Channel.PostCollectionData_GTChurchAsync(customer_id, CollFormID, userid, tra_amt, narration, customer_acct, mem_name);
        }
        
        public System.Threading.Tasks.Task<string> TransferFunds_TranSeqCommitAsync(string Acct_fro, string Acct_to, double Amount, string type, int EXPL_CODE, string channel, string Remarks, int origtbraCode, string docAlp, int supervisorID, int tellerID, string transUniqIndenf)
        {
            return base.Channel.TransferFunds_TranSeqCommitAsync(Acct_fro, Acct_to, Amount, type, EXPL_CODE, channel, Remarks, origtbraCode, docAlp, supervisorID, tellerID, transUniqIndenf);
        }
        
        public System.Threading.Tasks.Task<string> TransferGTBChequesTransSeqCommitAsync(string Acct_fro, string Acct_to, double Amount, string type, string channel, string Remarks, int docnum, short identifier, short bankcode, short days, string docAlp, int supervisorID, int tellerID, int origtbraCode, string transUniqIndenf)
        {
            return base.Channel.TransferGTBChequesTransSeqCommitAsync(Acct_fro, Acct_to, Amount, type, channel, Remarks, docnum, identifier, bankcode, days, docAlp, supervisorID, tellerID, origtbraCode, transUniqIndenf);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> ExecuteBasisQueryAsync(string quer, int db)
        {
            return base.Channel.ExecuteBasisQueryAsync(quer, db);
        }
        
        public System.Threading.Tasks.Task<string> Basis_Transfer_ErrorsAsync(string errorCode)
        {
            return base.Channel.Basis_Transfer_ErrorsAsync(errorCode);
        }
        
        public System.Threading.Tasks.Task<string> AddRestrictionAsync(int tell_id, int branchcode, int customernum, int currencycode, int ledgercode, int subacctcode, int restrictcode, string restricttext)
        {
            return base.Channel.AddRestrictionAsync(tell_id, branchcode, customernum, currencycode, ledgercode, subacctcode, restrictcode, restricttext);
        }
        
        public System.Threading.Tasks.Task<string> RemoveRestrictionAsync(int tell_id, int branchcode, int customernum, int currencycode, int ledgercode, int subacctcode, int restrictcode, string restricttext, int restrictionseq, int opetype)
        {
            return base.Channel.RemoveRestrictionAsync(tell_id, branchcode, customernum, currencycode, ledgercode, subacctcode, restrictcode, restricttext, restrictionseq, opetype);
        }
        
        public System.Threading.Tasks.Task<string> BlockFunds_PMAsync(string bracode, string cusnum, string curcode, string ledcode, string subacctcode, string remarks, string tra_amount, string expdate, string tellerid, string blkType, string blkTypeCode)
        {
            return base.Channel.BlockFunds_PMAsync(bracode, cusnum, curcode, ledcode, subacctcode, remarks, tra_amount, expdate, tellerid, blkType, blkTypeCode);
        }
        
        public System.Threading.Tasks.Task<int> UnBlockFundimmediateAsync(int braCode, int cusNum, int curCode, int ledCode, int subAcctCode, int bloSeq, double bloAmt, int tellID)
        {
            return base.Channel.UnBlockFundimmediateAsync(braCode, cusNum, curCode, ledCode, subAcctCode, bloSeq, bloAmt, tellID);
        }
        
        public System.Threading.Tasks.Task<int> UnBlockFundbatchAsync(int braCode, int cusNum, int curCode, int ledCode, int subAcctCode, int bloSeq, double bloAmt, int tellID, System.DateTime eff_Date)
        {
            return base.Channel.UnBlockFundbatchAsync(braCode, cusNum, curCode, ledCode, subAcctCode, bloSeq, bloAmt, tellID, eff_Date);
        }
        
        public System.Threading.Tasks.Task<string> PostCollectionData_OthersAsync(int ussdcode, int merchantcode, int atmcode, string channel, string userid, decimal tra_amt, decimal total_tra_amt, string narration, string customer_acct, string customercode, string customername)
        {
            return base.Channel.PostCollectionData_OthersAsync(ussdcode, merchantcode, atmcode, channel, userid, tra_amt, total_tra_amt, narration, customer_acct, customercode, customername);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetCollectionFormByUSSDCodeAsync(int ussdcode, int merchantcode)
        {
            return base.Channel.GetCollectionFormByUSSDCodeAsync(ussdcode, merchantcode);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetCollectionFormByATMCodeAsync(int atmcode)
        {
            return base.Channel.GetCollectionFormByATMCodeAsync(atmcode);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetUSSDCollectionFormFieldsAsync(int ussdcode, int merchantcode)
        {
            return base.Channel.GetUSSDCollectionFormFieldsAsync(ussdcode, merchantcode);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetATMCollectionFormFieldsAsync(int atmcode)
        {
            return base.Channel.GetATMCollectionFormFieldsAsync(atmcode);
        }
        
        public System.Threading.Tasks.Task<string> TransferFund3Async(string Acct_fro, string Acct_to, double Amount, string type, int EXPL_CODE, string channel, string Remarks)
        {
            return base.Channel.TransferFund3Async(Acct_fro, Acct_to, Amount, type, EXPL_CODE, channel, Remarks);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetCollectionFormFieldDetails_othersAsync(string debAcct, string channel, int merchantcode, int ussdcode, int atmcode, string customercode)
        {
            return base.Channel.GetCollectionFormFieldDetails_othersAsync(debAcct, channel, merchantcode, ussdcode, atmcode, customercode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AppDevService.SendEmail_AttachmentResponse> AppDevService.AppDevServiceSoap.SendEmail_AttachmentAsync(AppDevService.SendEmail_AttachmentRequest request)
        {
            return base.Channel.SendEmail_AttachmentAsync(request);
        }
        
        public System.Threading.Tasks.Task<AppDevService.SendEmail_AttachmentResponse> SendEmail_AttachmentAsync(string subject, string mailmessage, string emailfrom, string emailto, string CCopy, byte[] contentStream, string contentType, string fileName)
        {
            AppDevService.SendEmail_AttachmentRequest inValue = new AppDevService.SendEmail_AttachmentRequest();
            inValue.subject = subject;
            inValue.mailmessage = mailmessage;
            inValue.emailfrom = emailfrom;
            inValue.emailto = emailto;
            inValue.CCopy = CCopy;
            inValue.contentStream = contentStream;
            inValue.contentType = contentType;
            inValue.fileName = fileName;
            return ((AppDevService.AppDevServiceSoap)(this)).SendEmail_AttachmentAsync(inValue);
        }
        
        public System.Threading.Tasks.Task<string> BankPortAsync(string bvn, string mobilenumber)
        {
            return base.Channel.BankPortAsync(bvn, mobilenumber);
        }
        
        public System.Threading.Tasks.Task<string> GenerateOTPAsync(int braCode, int cusNum, string channel, int otpLength, string transID, string terminalID)
        {
            return base.Channel.GenerateOTPAsync(braCode, cusNum, channel, otpLength, transID, terminalID);
        }
        
        public System.Threading.Tasks.Task<string> ValidateOTPAsync(int braCode, int cusNum, string OTP, string transID, string terminalID)
        {
            return base.Channel.ValidateOTPAsync(braCode, cusNum, OTP, transID, terminalID);
        }
        
        public System.Threading.Tasks.Task<string> ValidateAdminUserOffSiteWithIPAsync(string userid, string password, int appid, string ipAddress)
        {
            return base.Channel.ValidateAdminUserOffSiteWithIPAsync(userid, password, appid, ipAddress);
        }
        
        public System.Threading.Tasks.Task<string> ValidateEncryptedAdminUserOffSiteWithIPAsync(string userid, string password, string code, int appid, string ipAddress)
        {
            return base.Channel.ValidateEncryptedAdminUserOffSiteWithIPAsync(userid, password, code, appid, ipAddress);
        }
        
        public System.Threading.Tasks.Task<string> ValidateAdminUsrAsync(string userid, string password)
        {
            return base.Channel.ValidateAdminUsrAsync(userid, password);
        }
        
        public System.Threading.Tasks.Task<string> ValidateAdminUserWithIPAsync(string userid, string password, int appid, string ipAddress)
        {
            return base.Channel.ValidateAdminUserWithIPAsync(userid, password, appid, ipAddress);
        }
        
        public System.Threading.Tasks.Task<string> ValidateEncryptedAdminUserWithIPAsync(string userid, string password, string code, int appid, string ipAddress)
        {
            return base.Channel.ValidateEncryptedAdminUserWithIPAsync(userid, password, code, appid, ipAddress);
        }
        
        public System.Threading.Tasks.Task<string> GetLastLoginTimeAsync(string userid, int appid)
        {
            return base.Channel.GetLastLoginTimeAsync(userid, appid);
        }
        
        public System.Threading.Tasks.Task<string> BVNLinkerHelperOtherAsync(
                    string userID, 
                    string BVN, 
                    string FirstName, 
                    string bankcode, 
                    string LastName, 
                    string PhoneNumber, 
                    string RegistrationDate, 
                    string EnrollmentBank, 
                    string channel, 
                    string nuban, 
                    string MiddleName, 
                    string DateOfBirth, 
                    string sign, 
                    string platformid, 
                    string EnrollmentBranch, 
                    string domainName, 
                    string ipAdd)
        {
            return base.Channel.BVNLinkerHelperOtherAsync(userID, BVN, FirstName, bankcode, LastName, PhoneNumber, RegistrationDate, EnrollmentBank, channel, nuban, MiddleName, DateOfBirth, sign, platformid, EnrollmentBranch, domainName, ipAdd);
        }
        
        public System.Threading.Tasks.Task<int> GTGuardEnableIntlTrxAsync(string pPAN, string pExpiry, string pAction, string channel)
        {
            return base.Channel.GTGuardEnableIntlTrxAsync(pPAN, pExpiry, pAction, channel);
        }
        
        public System.Threading.Tasks.Task<string> GTGuardCardStatusAsync(string pPAN, string Expiry)
        {
            return base.Channel.GTGuardCardStatusAsync(pPAN, Expiry);
        }
        
        public System.Threading.Tasks.Task<string> LocalTransfer_ATMAsync(string benNUBAN, double amount, double charge, double vat, string acctToDebitTransfer, int expl_Code, string transRef, string chargeAcc, int expl_Code_charge, int expl_Code_Vat, string vatAcc, double vatAmount, string exemptCharge)
        {
            return base.Channel.LocalTransfer_ATMAsync(benNUBAN, amount, charge, vat, acctToDebitTransfer, expl_Code, transRef, chargeAcc, expl_Code_charge, expl_Code_Vat, vatAcc, vatAmount, exemptCharge);
        }
        
        public System.Threading.Tasks.Task<string> IRequestAsync(
                    int bracode, 
                    int cusnum, 
                    string CusName, 
                    decimal TransactionAmt, 
                    string remarks, 
                    string pan, 
                    int NoOfLeaves, 
                    string ChargeAcct, 
                    string StmtAcct, 
                    string StartDate, 
                    string EndDate, 
                    int NoOfCopies, 
                    int ReqType, 
                    string requestID, 
                    int PreferredBranch, 
                    string InitiatedBy, 
                    string pickUpBy, 
                    string MeansID, 
                    string channel, 
                    string docalp, 
                    string PickName, 
                    AppDevService.StatementRequest[] lstStatement, 
                    string Pickupmethod)
        {
            return base.Channel.IRequestAsync(bracode, cusnum, CusName, TransactionAmt, remarks, pan, NoOfLeaves, ChargeAcct, StmtAcct, StartDate, EndDate, NoOfCopies, ReqType, requestID, PreferredBranch, InitiatedBy, pickUpBy, MeansID, channel, docalp, PickName, lstStatement, Pickupmethod);
        }
        
        public System.Threading.Tasks.Task<string> CancelIRequestAsync(long RefCode, string update_by, int bracode, int cusnum, string reason, string cancel_channel)
        {
            return base.Channel.CancelIRequestAsync(RefCode, update_by, bracode, cusnum, reason, cancel_channel);
        }
        
        public System.Threading.Tasks.Task<string> ConfirmIRequestAsync(int requestType, long RefCode, string Updated_By, string tellerTill, int opsHeadBraCode, int tellerBasisID, int supervisorBasisID)
        {
            return base.Channel.ConfirmIRequestAsync(requestType, RefCode, Updated_By, tellerTill, opsHeadBraCode, tellerBasisID, supervisorBasisID);
        }
        
        public System.Threading.Tasks.Task<string> AcknowledgeIRequestAsync(long ReqID, string Updated_By, int bracode, int cusnum, int requestType, int sla, int prefbranch, string tokenVal)
        {
            return base.Channel.AcknowledgeIRequestAsync(ReqID, Updated_By, bracode, cusnum, requestType, sla, prefbranch, tokenVal);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> ReturnIrequestStatementDetailsAsync(long IRequestID)
        {
            return base.Channel.ReturnIrequestStatementDetailsAsync(IRequestID);
        }
        
        public System.Threading.Tasks.Task<AppDevService.RetrieveIRequestResponseRetrieveIRequestResult> RetrieveIRequestAsync(int branch, int reqtype)
        {
            return base.Channel.RetrieveIRequestAsync(branch, reqtype);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AppDevService.RetrieveIRequest2Response> AppDevService.AppDevServiceSoap.RetrieveIRequest2Async(AppDevService.RetrieveIRequest2Request request)
        {
            return base.Channel.RetrieveIRequest2Async(request);
        }
        
        public System.Threading.Tasks.Task<AppDevService.RetrieveIRequest2Response> RetrieveIRequest2Async(System.Nullable<long> refCode, System.Nullable<int> braCode, string dateFrom, string dateTo, System.Nullable<int> ReqType, string status)
        {
            AppDevService.RetrieveIRequest2Request inValue = new AppDevService.RetrieveIRequest2Request();
            inValue.refCode = refCode;
            inValue.braCode = braCode;
            inValue.dateFrom = dateFrom;
            inValue.dateTo = dateTo;
            inValue.ReqType = ReqType;
            inValue.status = status;
            return ((AppDevService.AppDevServiceSoap)(this)).RetrieveIRequest2Async(inValue);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> RetrieveIRequestByRefCodeAsync(long refCode)
        {
            return base.Channel.RetrieveIRequestByRefCodeAsync(refCode);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> RetrieveIRequest_UserIDAsync(int bracode, int cusnum)
        {
            return base.Channel.RetrieveIRequest_UserIDAsync(bracode, cusnum);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> RetrieveIRequest_ByDateAsync(int bracode, int cusnum, System.DateTime fromdate, System.DateTime endDate)
        {
            return base.Channel.RetrieveIRequest_ByDateAsync(bracode, cusnum, fromdate, endDate);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> RetrieveIRequestBranchesAsync(string status, int method)
        {
            return base.Channel.RetrieveIRequestBranchesAsync(status, method);
        }
        
        public System.Threading.Tasks.Task<string> IRequestBranchProfileAsync(int branch, string userid, string status)
        {
            return base.Channel.IRequestBranchProfileAsync(branch, userid, status);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> ReturnIRequestCategoriesAsync()
        {
            return base.Channel.ReturnIRequestCategoriesAsync();
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> ReturnAllActiveTellersPerBranchAsync(int branchCode)
        {
            return base.Channel.ReturnAllActiveTellersPerBranchAsync(branchCode);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> SelectSMSBankingMenusAsync()
        {
            return base.Channel.SelectSMSBankingMenusAsync();
        }
        
        public System.Threading.Tasks.Task<AppDevService.ServiceResponse> ProfileSMSBankingMenuAsync(string syntax, string menuName, string menuDesc, int flag, int action, long sNo)
        {
            return base.Channel.ProfileSMSBankingMenuAsync(syntax, menuName, menuDesc, flag, action, sNo);
        }
        
        public System.Threading.Tasks.Task<string> ValidateUserTokenWithAmountAsync(string userid, string tokenvalue, string purp, string chann, double TransactionAmount)
        {
            return base.Channel.ValidateUserTokenWithAmountAsync(userid, tokenvalue, purp, chann, TransactionAmount);
        }
        
        public System.Threading.Tasks.Task<string> CreateSpend2SaveAsync(string requextxml)
        {
            return base.Channel.CreateSpend2SaveAsync(requextxml);
        }
        
        public System.Threading.Tasks.Task<string> CancelSpend2SaveAsync(string requextxml)
        {
            return base.Channel.CancelSpend2SaveAsync(requextxml);
        }
        
        public System.Threading.Tasks.Task<string> OpenAdditionalAccountAsync(int bracode, int cusnum, int ledcode, int curcode)
        {
            return base.Channel.OpenAdditionalAccountAsync(bracode, cusnum, ledcode, curcode);
        }
        
        public System.Threading.Tasks.Task<string> InsertSpendToSaveDEtailsOnBasisAsync(int bracode, int cusnum, int curcode, int ledcode, int subacctcode, decimal savepercent, int opertype)
        {
            return base.Channel.InsertSpendToSaveDEtailsOnBasisAsync(bracode, cusnum, curcode, ledcode, subacctcode, savepercent, opertype);
        }
        
        public System.Threading.Tasks.Task<string> TransferFund_mobAsync(string Acct_fro, string Acct_to, double Amount, string type, string channel, string Remarks, string Remarks_2)
        {
            return base.Channel.TransferFund_mobAsync(Acct_fro, Acct_to, Amount, type, channel, Remarks, Remarks_2);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetCollectionFormFieldDetails2Async(int customerid, int formid, AppDevService.ArrayOfXElement dt_fieldset, string acctid, string ch)
        {
            return base.Channel.GetCollectionFormFieldDetails2Async(customerid, formid, dt_fieldset, acctid, ch);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetInternationalSpendingLimitAsync(string bra_code, string cus_num)
        {
            return base.Channel.GetInternationalSpendingLimitAsync(bra_code, cus_num);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AppDevService.GenerateMT942StatementResponse> AppDevService.AppDevServiceSoap.GenerateMT942StatementAsync(AppDevService.GenerateMT942StatementRequest request)
        {
            return base.Channel.GenerateMT942StatementAsync(request);
        }
        
        public System.Threading.Tasks.Task<AppDevService.GenerateMT942StatementResponse> GenerateMT942StatementAsync(string accountNumber, string Nuban, string startdate, string enddate)
        {
            AppDevService.GenerateMT942StatementRequest inValue = new AppDevService.GenerateMT942StatementRequest();
            inValue.accountNumber = accountNumber;
            inValue.Nuban = Nuban;
            inValue.startdate = startdate;
            inValue.enddate = enddate;
            return ((AppDevService.AppDevServiceSoap)(this)).GenerateMT942StatementAsync(inValue);
        }
        
        public System.Threading.Tasks.Task<string> FXBlotterInsertAsync(
                    string trans_deal_slip, 
                    string form_no, 
                    int sell_buy, 
                    string transtype, 
                    string currency, 
                    string fcy_acct, 
                    decimal fcy_amt, 
                    string ngn_acct, 
                    decimal ngn_equiv, 
                    string lc_ba_no, 
                    string source_fund, 
                    System.DateTime deal_date, 
                    System.DateTime settlement_date, 
                    string prod_type, 
                    string gl_id_no, 
                    string cus_name, 
                    string client_cat, 
                    string status, 
                    string channel, 
                    decimal rate, 
                    string currency2, 
                    decimal fcy_amt2, 
                    string fcy_acct2, 
                    decimal crossRate, 
                    decimal usd_equ, 
                    decimal calypsoRate)
        {
            return base.Channel.FXBlotterInsertAsync(trans_deal_slip, form_no, sell_buy, transtype, currency, fcy_acct, fcy_amt, ngn_acct, ngn_equiv, lc_ba_no, source_fund, deal_date, settlement_date, prod_type, gl_id_no, cus_name, client_cat, status, channel, rate, currency2, fcy_amt2, fcy_acct2, crossRate, usd_equ, calypsoRate);
        }
        
        public System.Threading.Tasks.Task<string> FXBlotterPositionAsync(string currency, string channel)
        {
            return base.Channel.FXBlotterPositionAsync(currency, channel);
        }
        
        public System.Threading.Tasks.Task<long> InsertAppLoginDetailsAsync(string userid, int appid, string ipAddress)
        {
            return base.Channel.InsertAppLoginDetailsAsync(userid, appid, ipAddress);
        }
        
        public System.Threading.Tasks.Task<string> CheckTransactionExistAsync(string bra_code, string cus_num, string cur_code, string led_code, string sub_acct_code, double tra_amt, string remark, string expl_code, int deb_cre_ind)
        {
            return base.Channel.CheckTransactionExistAsync(bra_code, cus_num, cur_code, led_code, sub_acct_code, tra_amt, remark, expl_code, deb_cre_ind);
        }
        
        public System.Threading.Tasks.Task<string> ValidateEncryptedAdminUserOffSiteWithIPDesktopAsync(string userid, string password, string code, int appid, string ipAddress)
        {
            return base.Channel.ValidateEncryptedAdminUserOffSiteWithIPDesktopAsync(userid, password, code, appid, ipAddress);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> getuserdetailsAsync(string username)
        {
            return base.Channel.getuserdetailsAsync(username);
        }
        
        public System.Threading.Tasks.Task updateGIROLoginAsync(string userName, string firstName, string lastName, string loginStartDate)
        {
            return base.Channel.updateGIROLoginAsync(userName, firstName, lastName, loginStartDate);
        }
        
        public System.Threading.Tasks.Task updateGIROLogoutAsync(string userName, string loginstart)
        {
            return base.Channel.updateGIROLogoutAsync(userName, loginstart);
        }
        
        public System.Threading.Tasks.Task<long> getLastSequenceAsync()
        {
            return base.Channel.getLastSequenceAsync();
        }
        
        public System.Threading.Tasks.Task<string> RegisterBeneficiaryAsync(string braCode, string cusNum, string email, string mobilenumber, string benename, string beneAccountNumber, string benBank, string transType)
        {
            return base.Channel.RegisterBeneficiaryAsync(braCode, cusNum, email, mobilenumber, benename, beneAccountNumber, benBank, transType);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> ReturnNeftTransactionsForGIROAsync(string postDate, string FromTraSeq, string ToTraSeq, int subAcctCode)
        {
            return base.Channel.ReturnNeftTransactionsForGIROAsync(postDate, FromTraSeq, ToTraSeq, subAcctCode);
        }
        
        public System.Threading.Tasks.Task<string> TransferCalAsync(string Acct_fro, string Acct_to, double Amount, int expl_code, string Remarks)
        {
            return base.Channel.TransferCalAsync(Acct_fro, Acct_to, Amount, expl_code, Remarks);
        }
        
        public System.Threading.Tasks.Task<string> MT940_RangeAsync(string cusid, System.DateTime startDate, System.DateTime enDate)
        {
            return base.Channel.MT940_RangeAsync(cusid, startDate, enDate);
        }
        
        public System.Threading.Tasks.Task<string> SalaryAdvanceRequestAsync(string accountnumber, double Amount, string medium)
        {
            return base.Channel.SalaryAdvanceRequestAsync(accountnumber, Amount, medium);
        }
        
        public System.Threading.Tasks.Task<string> SearchOFACListAsync(string cus_sho_name)
        {
            return base.Channel.SearchOFACListAsync(cus_sho_name);
        }
        
        public System.Threading.Tasks.Task<string> ValidateSwiftBICAsync(string SwiftBIC)
        {
            return base.Channel.ValidateSwiftBICAsync(SwiftBIC);
        }
        
        public System.Threading.Tasks.Task<string> ValidateIBANAsync(string IBAN)
        {
            return base.Channel.ValidateIBANAsync(IBAN);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ObjectResponse> CreateAdditionalAccountAsync(int bra, int cus, int cur, int led, int tell_id, string acctmgr, string acctnat, string collLedCode, string collSubAcc)
        {
            return base.Channel.CreateAdditionalAccountAsync(bra, cus, cur, led, tell_id, acctmgr, acctnat, collLedCode, collSubAcc);
        }
        
        public System.Threading.Tasks.Task<string> CreateAdditionalSubAccountAsync(int intBraCode, int intCusNum, int intCurCode, int intLedCode, int intTellerID, string strReason, long intUserID, string strChannel, string strCreator, string strDocAlp)
        {
            return base.Channel.CreateAdditionalSubAccountAsync(intBraCode, intCusNum, intCurCode, intLedCode, intTellerID, strReason, intUserID, strChannel, strCreator, strDocAlp);
        }
        
        public System.Threading.Tasks.Task<string> ValidateLoanMasCustomerAsync(string bra_code, string cus_num, string loan_led)
        {
            return base.Channel.ValidateLoanMasCustomerAsync(bra_code, cus_num, loan_led);
        }
        
        public System.Threading.Tasks.Task<string> AvailRevolvingCreditAsync(int bra_code, int cus_num, int cur_code, int led_code, int sub_acct_code, int tell_id, double rate, double bal_lim, string mat_date, string channel, string docAlp, string transUniqIndenf)
        {
            return base.Channel.AvailRevolvingCreditAsync(bra_code, cus_num, cur_code, led_code, sub_acct_code, tell_id, rate, bal_lim, mat_date, channel, docAlp, transUniqIndenf);
        }
        
        public System.Threading.Tasks.Task<string> LogDispenseAsync(
                    string bra_code, 
                    string cusnum, 
                    string curcode, 
                    string ledcode, 
                    string subacctcode, 
                    decimal trans_amt, 
                    decimal amt_disp, 
                    decimal amt_due, 
                    string transdate, 
                    string stan, 
                    string userid, 
                    int platform, 
                    string bank, 
                    string status, 
                    string errtype, 
                    string pan, 
                    string mercht, 
                    string settled, 
                    System.DateTime datelogged, 
                    string acctname, 
                    string smart_card_no, 
                    string phoneno, 
                    string network, 
                    string atmlocate, 
                    string atmbranch, 
                    string cusname, 
                    string benphone, 
                    string benacctno, 
                    string refid, 
                    int orig_bracode, 
                    string uptick)
        {
            return base.Channel.LogDispenseAsync(bra_code, cusnum, curcode, ledcode, subacctcode, trans_amt, amt_disp, amt_due, transdate, stan, userid, platform, bank, status, errtype, pan, mercht, settled, datelogged, acctname, smart_card_no, phoneno, network, atmlocate, atmbranch, cusname, benphone, benacctno, refid, orig_bracode, uptick);
        }
        
        public System.Threading.Tasks.Task<string> AddBasisRoleAsync(string role_desc)
        {
            return base.Channel.AddBasisRoleAsync(role_desc);
        }
        
        public System.Threading.Tasks.Task<string> AddNewTellerAsync(int BASISID, string Username, string password, int branch_code, string roleid, string UpdateFlag)
        {
            return base.Channel.AddNewTellerAsync(BASISID, Username, password, branch_code, roleid, UpdateFlag);
        }
        
        public System.Threading.Tasks.Task<string> SearchBASISUserAsync(string str, string branch_code)
        {
            return base.Channel.SearchBASISUserAsync(str, branch_code);
        }
        
        public System.Threading.Tasks.Task<string> CheckExternalTransactionFlagAsync(string ledgercode)
        {
            return base.Channel.CheckExternalTransactionFlagAsync(ledgercode);
        }
        
        public System.Threading.Tasks.Task<string> AnalyzeFxAsync(string acctno, decimal transfer_amt, System.DateTime anal_date)
        {
            return base.Channel.AnalyzeFxAsync(acctno, transfer_amt, anal_date);
        }
        
        public System.Threading.Tasks.Task<string> CheckDailyLimit_FUELCARDAsync(string acctno)
        {
            return base.Channel.CheckDailyLimit_FUELCARDAsync(acctno);
        }
        
        public System.Threading.Tasks.Task<int> HotlistCardAsync(string pPAN, long pCustomerID, string pExpiry, string pSeqNo, int pResponseCode)
        {
            return base.Channel.HotlistCardAsync(pPAN, pCustomerID, pExpiry, pSeqNo, pResponseCode);
        }
        
        public System.Threading.Tasks.Task<string> HotlistCard_ivrAsync(string pPAN, string pCustomerID, string pExpiry, int hotlistReason)
        {
            return base.Channel.HotlistCard_ivrAsync(pPAN, pCustomerID, pExpiry, hotlistReason);
        }
        
        public System.Threading.Tasks.Task<string> GetCardStatusAsync(string pPAN, string pCustomerID, string pExpiry, string pSeqNo)
        {
            return base.Channel.GetCardStatusAsync(pPAN, pCustomerID, pExpiry, pSeqNo);
        }
        
        public System.Threading.Tasks.Task<string> InitiateStandingInstructionAsync(string acctno, int pFreq, System.DateTime p1stPayDate, decimal Amount, System.DateTime pLastPayDate, string pAcctToCredit, string pRemarks)
        {
            return base.Channel.InitiateStandingInstructionAsync(acctno, pFreq, p1stPayDate, Amount, pLastPayDate, pAcctToCredit, pRemarks);
        }
        
        public System.Threading.Tasks.Task<string> InitiateStandingInstruction2Async(string acctno, int pFreq, string p1stPayDate, decimal Amount, string pLastPayDate, string pAcctToCredit, string pRemarks)
        {
            return base.Channel.InitiateStandingInstruction2Async(acctno, pFreq, p1stPayDate, Amount, pLastPayDate, pAcctToCredit, pRemarks);
        }
        
        public System.Threading.Tasks.Task<string> InitiateStandingInstruction_ChargeAsync(string acctno, int pFreq, string p1stPayDate, decimal Amount, string pLastPayDate, string pAcctToCredit, string pRemarks)
        {
            return base.Channel.InitiateStandingInstruction_ChargeAsync(acctno, pFreq, p1stPayDate, Amount, pLastPayDate, pAcctToCredit, pRemarks);
        }
        
        public System.Threading.Tasks.Task<string> CancelStandingInstructionAsync(string acctno, int pSeq)
        {
            return base.Channel.CancelStandingInstructionAsync(acctno, pSeq);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetStandingInstructionFromBASISAsync(string debit_acctno, string doc_num, string cred_acct, decimal amt)
        {
            return base.Channel.GetStandingInstructionFromBASISAsync(debit_acctno, doc_num, cred_acct, amt);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetStandingInstructionFromBASIS2Async(string debit_acctno, string doc_num, string cred_acct, decimal amt, int basisseq)
        {
            return base.Channel.GetStandingInstructionFromBASIS2Async(debit_acctno, doc_num, cred_acct, amt, basisseq);
        }
        
        public System.Threading.Tasks.Task<decimal> GetAuthorizationLimitAsync(string adminuserid)
        {
            return base.Channel.GetAuthorizationLimitAsync(adminuserid);
        }
        
        public System.Threading.Tasks.Task<string> RetrieveCardPINAsync(string userid, string PANDigits, string CardExpiry)
        {
            return base.Channel.RetrieveCardPINAsync(userid, PANDigits, CardExpiry);
        }
        
        public System.Threading.Tasks.Task<string> SendEmailToNewIbankUserAsync(long userid)
        {
            return base.Channel.SendEmailToNewIbankUserAsync(userid);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AppDevService.GenerateMT940StatementResponse> AppDevService.AppDevServiceSoap.GenerateMT940StatementAsync(AppDevService.GenerateMT940StatementRequest request)
        {
            return base.Channel.GenerateMT940StatementAsync(request);
        }
        
        public System.Threading.Tasks.Task<AppDevService.GenerateMT940StatementResponse> GenerateMT940StatementAsync(int custid, string accountNumber, string startdate, string enddate)
        {
            AppDevService.GenerateMT940StatementRequest inValue = new AppDevService.GenerateMT940StatementRequest();
            inValue.custid = custid;
            inValue.accountNumber = accountNumber;
            inValue.startdate = startdate;
            inValue.enddate = enddate;
            return ((AppDevService.AppDevServiceSoap)(this)).GenerateMT940StatementAsync(inValue);
        }
        
        public System.Threading.Tasks.Task<string> InitateStandingInstructionForSMSChargeAsync(string xmlRequest)
        {
            return base.Channel.InitateStandingInstructionForSMSChargeAsync(xmlRequest);
        }
        
        public System.Threading.Tasks.Task<string> CancellationRequestAsync(string OrigbraCode, string tellerId, string origttraseq1, string applicationid, string tellerbracode, string cancelreason)
        {
            return base.Channel.CancellationRequestAsync(OrigbraCode, tellerId, origttraseq1, applicationid, tellerbracode, cancelreason);
        }
        
        public System.Threading.Tasks.Task<string> GetCustomerOpportunityAsync(int braCode, int cusnum)
        {
            return base.Channel.GetCustomerOpportunityAsync(braCode, cusnum);
        }
        
        public System.Threading.Tasks.Task<string> InitiateIReferAsync(int braCode, int cusnum, string Referred_name, string Referred_mobileno, string Referred_email, string Channel, string initiator, string nubannumber)
        {
            return base.Channel.InitiateIReferAsync(braCode, cusnum, Referred_name, Referred_mobileno, Referred_email, Channel, initiator, nubannumber);
        }
        
        public System.Threading.Tasks.Task<string> UpdateIRefer2Async(long refcode, string updatedby)
        {
            return base.Channel.UpdateIRefer2Async(refcode, updatedby);
        }
        
        public System.Threading.Tasks.Task<string> UpdateIReferAsync(long refcode, string updatedby)
        {
            return base.Channel.UpdateIReferAsync(refcode, updatedby);
        }
        
        public System.Threading.Tasks.Task<AppDevService.GetBlockedFundsResponseGetBlockedFundsResult> GetBlockedFundsAsync(string bra_code, string cus_num)
        {
            return base.Channel.GetBlockedFundsAsync(bra_code, cus_num);
        }
        
        public System.Threading.Tasks.Task<AppDevService.GetBasisBlockedFundsResponseGetBasisBlockedFundsResult> GetBasisBlockedFundsAsync(string bra_code, string cus_num)
        {
            return base.Channel.GetBasisBlockedFundsAsync(bra_code, cus_num);
        }
        
        public System.Threading.Tasks.Task<AppDevService.GetBlockedFundsSTANResponseGetBlockedFundsSTANResult> GetBlockedFundsSTANAsync(string bra_code, string cus_num)
        {
            return base.Channel.GetBlockedFundsSTANAsync(bra_code, cus_num);
        }
        
        public System.Threading.Tasks.Task<string> DispenseErrorMainAsync(
                    int branchCode, 
                    int origbraCode, 
                    int cusNum, 
                    int curCode, 
                    int ledCode, 
                    int subacctCode, 
                    decimal tranAmount, 
                    decimal amtDispensed, 
                    string PAN, 
                    string STAN, 
                    string bankNam, 
                    string transacDate, 
                    string merchant, 
                    string userID, 
                    string smartCardNo, 
                    string phoneNo, 
                    string network, 
                    string declineReason, 
                    string errorType, 
                    string GTBATMLocation, 
                    string ATMBranchCode, 
                    string benePhoneNo, 
                    string beneAcctNo, 
                    string refID, 
                    string ticks)
        {
            return base.Channel.DispenseErrorMainAsync(branchCode, origbraCode, cusNum, curCode, ledCode, subacctCode, tranAmount, amtDispensed, PAN, STAN, bankNam, transacDate, merchant, userID, smartCardNo, phoneNo, network, declineReason, errorType, GTBATMLocation, ATMBranchCode, benePhoneNo, beneAcctNo, refID, ticks);
        }
        
        public System.Threading.Tasks.Task<string> GTCheckIn_BookAsync(string userID, string cusName, string acctNum, string transType, int branchCode, string appointmentDate, string phoneNo, string eMail, string timeSlot, string Medium, string Additional_Request)
        {
            return base.Channel.GTCheckIn_BookAsync(userID, cusName, acctNum, transType, branchCode, appointmentDate, phoneNo, eMail, timeSlot, Medium, Additional_Request);
        }
        
        public System.Threading.Tasks.Task<string> GTCheckIn_CancelAsync(string userID, string refNO)
        {
            return base.Channel.GTCheckIn_CancelAsync(userID, refNO);
        }
        
        public System.Threading.Tasks.Task<string> GTCheckIn_RejectAsync(string userID, string refNo, string rejectedBy, string rejectedReason)
        {
            return base.Channel.GTCheckIn_RejectAsync(userID, refNo, rejectedBy, rejectedReason);
        }
        
        public System.Threading.Tasks.Task<AppDevService.GTTrackItResponseGTTrackItResult> GTTrackItAsync(string trackID, string requestType, string dateFrom, string dateTo)
        {
            return base.Channel.GTTrackItAsync(trackID, requestType, dateFrom, dateTo);
        }
        
        public System.Threading.Tasks.Task<string> NubanToOldAccountNumberAsync(string NubanAccountNumber)
        {
            return base.Channel.NubanToOldAccountNumberAsync(NubanAccountNumber);
        }
        
        public System.Threading.Tasks.Task<AppDevService.HolidaysResponseHolidaysResult> HolidaysAsync()
        {
            return base.Channel.HolidaysAsync();
        }
        
        public System.Threading.Tasks.Task<string> SendSMSLubredAsync(string mobileNum, string message, string ApplicationName)
        {
            return base.Channel.SendSMSLubredAsync(mobileNum, message, ApplicationName);
        }
        
        public System.Threading.Tasks.Task<string> InitiateAccountUpdateRequestAsync(string RequestType, string FirstName, string LastName, string IDCard, string AddressLine1, string AddressLine2, string EmailAddress, string MobileNumber, string AccountNumber, string UserID)
        {
            return base.Channel.InitiateAccountUpdateRequestAsync(RequestType, FirstName, LastName, IDCard, AddressLine1, AddressLine2, EmailAddress, MobileNumber, AccountNumber, UserID);
        }
        
        public System.Threading.Tasks.Task<AppDevService.GetAccountManagersResponseGetAccountManagersResult> GetAccountManagersAsync(string bra_code, string cus_num, string curcode, string ledcode, string subacctcode)
        {
            return base.Channel.GetAccountManagersAsync(bra_code, cus_num, curcode, ledcode, subacctcode);
        }
        
        public System.Threading.Tasks.Task<string> PopulateDetailsAsync(string NubanNo)
        {
            return base.Channel.PopulateDetailsAsync(NubanNo);
        }
        
        public System.Threading.Tasks.Task<string> ConvertToNubanAsync(string OldAccountNumber)
        {
            return base.Channel.ConvertToNubanAsync(OldAccountNumber);
        }
        
        public System.Threading.Tasks.Task<string> UpdateSalaryAdvanceStatusAsync(string uuid, string caseid, string status, int delindex)
        {
            return base.Channel.UpdateSalaryAdvanceStatusAsync(uuid, caseid, status, delindex);
        }
        
        public System.Threading.Tasks.Task<string> GetReferalCodeAsync(string mobnum)
        {
            return base.Channel.GetReferalCodeAsync(mobnum);
        }
        
        public System.Threading.Tasks.Task<string> UpdateIRefer3Async(long refcode, string updatedby, string nuban)
        {
            return base.Channel.UpdateIRefer3Async(refcode, updatedby, nuban);
        }
        
        public System.Threading.Tasks.Task<int> GetNumberOfActiveFEPCardsAsync(string bracode, string cusnum)
        {
            return base.Channel.GetNumberOfActiveFEPCardsAsync(bracode, cusnum);
        }
        
        public System.Threading.Tasks.Task<string> RetrieveAccountUpdateDetailsAsync(string RequestReference)
        {
            return base.Channel.RetrieveAccountUpdateDetailsAsync(RequestReference);
        }
        
        public System.Threading.Tasks.Task<string> ProcessmakernewCaseAsync(string sessionid, object[] newcaseParameters)
        {
            return base.Channel.ProcessmakernewCaseAsync(sessionid, newcaseParameters);
        }
        
        public System.Threading.Tasks.Task<string> ProcessmakerLoginAsync()
        {
            return base.Channel.ProcessmakerLoginAsync();
        }
        
        public System.Threading.Tasks.Task<string> ProcessmakerRouteCaseAsync(string sessionid, string caseid, int delindex)
        {
            return base.Channel.ProcessmakerRouteCaseAsync(sessionid, caseid, delindex);
        }
        
        public System.Threading.Tasks.Task<string> BVNLinkerHelperAsync(string userID, string BVN, string FirstName, string bankcode, string LastName, string PhoneNumber, string RegistrationDate, string EnrollmentBank, string channel, string nuban, string MiddleName, string DateOfBirth, string sign, string platformid, string EnrollmentBranch)
        {
            return base.Channel.BVNLinkerHelperAsync(userID, BVN, FirstName, bankcode, LastName, PhoneNumber, RegistrationDate, EnrollmentBank, channel, nuban, MiddleName, DateOfBirth, sign, platformid, EnrollmentBranch);
        }
        
        public System.Threading.Tasks.Task<string> AddRestrictionWithNubanAsync(int tell_id, string nuban, int restrictcode, string restricttext)
        {
            return base.Channel.AddRestrictionWithNubanAsync(tell_id, nuban, restrictcode, restricttext);
        }
        
        public System.Threading.Tasks.Task<string> GetActiveFEPCardsAsync(string pCustomerID)
        {
            return base.Channel.GetActiveFEPCardsAsync(pCustomerID);
        }
        
        public System.Threading.Tasks.Task<AppDevService.GetInternationalTransactionsResponseGetInternationalTransactionsResult> GetInternationalTransactionsAsync(string bra_code, string cus_num)
        {
            return base.Channel.GetInternationalTransactionsAsync(bra_code, cus_num);
        }
        
        public System.Threading.Tasks.Task<string> GetTotalInternationalSpendingAsync(string bra_code, string cus_num)
        {
            return base.Channel.GetTotalInternationalSpendingAsync(bra_code, cus_num);
        }
        
        public System.Threading.Tasks.Task<string> GenerateCVVAsync(string pan, string expiry)
        {
            return base.Channel.GenerateCVVAsync(pan, expiry);
        }
        
        public System.Threading.Tasks.Task<string> CreateUtilityAsync(int branchCode, int cusnum)
        {
            return base.Channel.CreateUtilityAsync(branchCode, cusnum);
        }
        
        public System.Threading.Tasks.Task<string> LinkUnlinkCardAsync(string pPAN, string pSeqNo, string pExpiry, string pAccountID, string pAccountType, string pCurrencyCode, string RequestBy, string pCardVal2, string pUniqueID, string pLinkType, string pTBPostFix)
        {
            return base.Channel.LinkUnlinkCardAsync(pPAN, pSeqNo, pExpiry, pAccountID, pAccountType, pCurrencyCode, RequestBy, pCardVal2, pUniqueID, pLinkType, pTBPostFix);
        }
        
        public System.Threading.Tasks.Task<int> HotlistVirtualCardAsync(string pPAN, long pCustomerID, string pExpiry, string pSeqNo, int pResponseCode, string UniqueCode)
        {
            return base.Channel.HotlistVirtualCardAsync(pPAN, pCustomerID, pExpiry, pSeqNo, pResponseCode, UniqueCode);
        }
        
        public System.Threading.Tasks.Task<string> Ibank_OnboardingAsync(string Nuban, string lastfourDigit_PAN, string mobileNo, string channel)
        {
            return base.Channel.Ibank_OnboardingAsync(Nuban, lastfourDigit_PAN, mobileNo, channel);
        }
        
        public System.Threading.Tasks.Task<string> GetCollectionListOfValuesAsync(int lov_ID)
        {
            return base.Channel.GetCollectionListOfValuesAsync(lov_ID);
        }
        
        public System.Threading.Tasks.Task<AppDevService.GetCollectionListOfValues2ResponseGetCollectionListOfValues2Result> GetCollectionListOfValues2Async(int lov_ID)
        {
            return base.Channel.GetCollectionListOfValues2Async(lov_ID);
        }
        
        public System.Threading.Tasks.Task<string> GetCollectionListOfValueDataAsync(int lov_ID, string value)
        {
            return base.Channel.GetCollectionListOfValueDataAsync(lov_ID, value);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetCollectionDetailsAsync()
        {
            return base.Channel.GetCollectionDetailsAsync();
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetCollectionCategtoriesAsync()
        {
            return base.Channel.GetCollectionCategtoriesAsync();
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetCollectionFormsByCategoryAsync(int catid)
        {
            return base.Channel.GetCollectionFormsByCategoryAsync(catid);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetBranchCollectionFormsByCategoryAsync(int catid)
        {
            return base.Channel.GetBranchCollectionFormsByCategoryAsync(catid);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetOnlineCollectionFormsByCategoryAsync(int catid)
        {
            return base.Channel.GetOnlineCollectionFormsByCategoryAsync(catid);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetWebCollectionFormsByCategoryAsync(int catid)
        {
            return base.Channel.GetWebCollectionFormsByCategoryAsync(catid);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetCollectionFormsByCustomerAsync(int custid)
        {
            return base.Channel.GetCollectionFormsByCustomerAsync(custid);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetBranchCollectionFormsByCustomerAsync(int custid)
        {
            return base.Channel.GetBranchCollectionFormsByCustomerAsync(custid);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetOnlineCollectionFormsByCustomerAsync(int custid)
        {
            return base.Channel.GetOnlineCollectionFormsByCustomerAsync(custid);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetWebCollectionFormsByCustomerAsync(int custid)
        {
            return base.Channel.GetWebCollectionFormsByCustomerAsync(custid);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetCollectionCustomersAsync()
        {
            return base.Channel.GetCollectionCustomersAsync();
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetCollectionCustomersByCategoryAsync(int cid)
        {
            return base.Channel.GetCollectionCustomersByCategoryAsync(cid);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetCollectionFormsAsync(int custid)
        {
            return base.Channel.GetCollectionFormsAsync(custid);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetCollectionFormByIDAsync(int formid)
        {
            return base.Channel.GetCollectionFormByIDAsync(formid);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetCollectionChargesAsync(int form_ID)
        {
            return base.Channel.GetCollectionChargesAsync(form_ID);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetBranchCollectionChargesAsync(int form_ID)
        {
            return base.Channel.GetBranchCollectionChargesAsync(form_ID);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetOnlineCollectionChargesAsync(int form_ID)
        {
            return base.Channel.GetOnlineCollectionChargesAsync(form_ID);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetWebCollectionChargesAsync(int form_ID)
        {
            return base.Channel.GetWebCollectionChargesAsync(form_ID);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetCollectionFormFieldsAsync(int formid)
        {
            return base.Channel.GetCollectionFormFieldsAsync(formid);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetBranchCollectionFormFieldsAsync(int formid)
        {
            return base.Channel.GetBranchCollectionFormFieldsAsync(formid);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> GetOnlineCollectionFormFieldsAsync(int formid)
        {
            return base.Channel.GetOnlineCollectionFormFieldsAsync(formid);
        }
        
        public System.Threading.Tasks.Task<AppDevService.ArrayOfXElement> RetrieveOrangLocBranchesAsync(string status)
        {
            return base.Channel.RetrieveOrangLocBranchesAsync(status);
        }
        
        public System.Threading.Tasks.Task<string> OrangeLocBranchProfileAsync(int branch, string userid, string status)
        {
            return base.Channel.OrangeLocBranchProfileAsync(branch, userid, status);
        }
        
        public System.Threading.Tasks.Task<string> ValidateUserTokenAsync(string userid, string tokenvalue, string purp, string chann)
        {
            return base.Channel.ValidateUserTokenAsync(userid, tokenvalue, purp, chann);
        }
        
        public System.Threading.Tasks.Task<string> ValidateAdminUserTokenAsync(string userid, string tokenvalue, string purp, string chann)
        {
            return base.Channel.ValidateAdminUserTokenAsync(userid, tokenvalue, purp, chann);
        }
        
        public System.Threading.Tasks.Task<string> ResetUserTokenAsync(string userid, string tokenvalue, string tokenID, string purp, string chann)
        {
            return base.Channel.ResetUserTokenAsync(userid, tokenvalue, tokenID, purp, chann);
        }
        
        public System.Threading.Tasks.Task<string> ResetAdminUserTokenAsync(string userid, string tokenvalue, string tokenID, string purp, string chann)
        {
            return base.Channel.ResetAdminUserTokenAsync(userid, tokenvalue, tokenID, purp, chann);
        }
        
        public System.Threading.Tasks.Task<string> ResetUserToken_OneOffAsync(string userid, string tokenID, string purp, string chann)
        {
            return base.Channel.ResetUserToken_OneOffAsync(userid, tokenID, purp, chann);
        }
        
        public System.Threading.Tasks.Task<string> ResetAdminUserToken_OneOffAsync(string userid, string tokenID, string purp, string chann)
        {
            return base.Channel.ResetAdminUserToken_OneOffAsync(userid, tokenID, purp, chann);
        }
        
        public System.Threading.Tasks.Task<string> KillMyIDAsync(int bracode, int tellerid)
        {
            return base.Channel.KillMyIDAsync(bracode, tellerid);
        }
        
        public System.Threading.Tasks.Task<string> KillMyID2Async(string userid)
        {
            return base.Channel.KillMyID2Async(userid);
        }
        
        public System.Threading.Tasks.Task<string> KillMyID3Async(string userid, string branchcode)
        {
            return base.Channel.KillMyID3Async(userid, branchcode);
        }
        
        public System.Threading.Tasks.Task<string> GetAccountBalanceTrandateAsync(string bracode, string cusnum)
        {
            return base.Channel.GetAccountBalanceTrandateAsync(bracode, cusnum);
        }
        
        public System.Threading.Tasks.Task<string> ValidateBeneficiaryAccountAsync(string userid, string benacctno, string type)
        {
            return base.Channel.ValidateBeneficiaryAccountAsync(userid, benacctno, type);
        }
        
        public System.Threading.Tasks.Task<string> ValidateAdminUserAsync(string userid, string password, int appid)
        {
            return base.Channel.ValidateAdminUserAsync(userid, password, appid);
        }
        
        public System.Threading.Tasks.Task<string> ValidateEncryptedAdminUserAsync(string userid, string password, string code, int appid)
        {
            return base.Channel.ValidateEncryptedAdminUserAsync(userid, password, code, appid);
        }
        
        public System.Threading.Tasks.Task<string> ValidateAdminUserOffSiteAsync(string userid, string password, int appid)
        {
            return base.Channel.ValidateAdminUserOffSiteAsync(userid, password, appid);
        }
        
        public System.Threading.Tasks.Task<string> ValidateEncryptedAdminUserOffSiteAsync(string userid, string password, string code, int appid)
        {
            return base.Channel.ValidateEncryptedAdminUserOffSiteAsync(userid, password, code, appid);
        }
        
        public System.Threading.Tasks.Task<string> ValidateUserAsync(string userid, string password)
        {
            return base.Channel.ValidateUserAsync(userid, password);
        }
        
        public System.Threading.Tasks.Task<string> GetTurnoverAsync(string userid)
        {
            return base.Channel.GetTurnoverAsync(userid);
        }
        
        public System.Threading.Tasks.Task<string> GetAccountBalanceAsync(string bracode, string cusnum, string curcode, string ledcode, string subacctcode)
        {
            return base.Channel.GetAccountBalanceAsync(bracode, cusnum, curcode, ledcode, subacctcode);
        }
        
        public System.Threading.Tasks.Task<string> GetCustomerNameAsync(string bracode, string cusnum)
        {
            return base.Channel.GetCustomerNameAsync(bracode, cusnum);
        }
        
        public System.Threading.Tasks.Task<string> GetLastTransactionDetailsAsync(int bracode, int cusnum, int curcode, int ledcode, int subacctcode)
        {
            return base.Channel.GetLastTransactionDetailsAsync(bracode, cusnum, curcode, ledcode, subacctcode);
        }
        
        public System.Threading.Tasks.Task<string> GetLastAccountStatementAsync(int bracode, int cusnum, int curcode, int ledcode, int subacctcode, string custemail)
        {
            return base.Channel.GetLastAccountStatementAsync(bracode, cusnum, curcode, ledcode, subacctcode, custemail);
        }
        
        public System.Threading.Tasks.Task<string> RequestChequeBookAsync(int bracode, int cusnum, int curcode, int ledcode, int subacctcode)
        {
            return base.Channel.RequestChequeBookAsync(bracode, cusnum, curcode, ledcode, subacctcode);
        }
        
        public System.Threading.Tasks.Task<string> StopChequeAsync(int bracode, int cusnum, int curcode, int ledcode, int subacctcode, int start, int stop, string amount)
        {
            return base.Channel.StopChequeAsync(bracode, cusnum, curcode, ledcode, subacctcode, start, stop, amount);
        }
        
        public System.Threading.Tasks.Task<string> ConfirmChequeAsync(string cust_acct_no, int docnum, decimal amount)
        {
            return base.Channel.ConfirmChequeAsync(cust_acct_no, docnum, amount);
        }
        
        public System.Threading.Tasks.Task<string> ConfirmCheque2Async(string cust_acct_no, int docnum, decimal amount, string ChequeDate, string BeneficiaryName, string Remarks)
        {
            return base.Channel.ConfirmCheque2Async(cust_acct_no, docnum, amount, ChequeDate, BeneficiaryName, Remarks);
        }
        
        public System.Threading.Tasks.Task<string> TransferFundAsync(string Acct_fro, string Acct_to, double Amount, string type, string channel, string Remarks)
        {
            return base.Channel.TransferFundAsync(Acct_fro, Acct_to, Amount, type, channel, Remarks);
        }
        
        public System.Threading.Tasks.Task<string> TransferFund2Async(string Acct_fro, string Acct_to, double Amount, string type, int EXPL_CODE, string channel, string Remarks, int org_branch)
        {
            return base.Channel.TransferFund2Async(Acct_fro, Acct_to, Amount, type, EXPL_CODE, channel, Remarks, org_branch);
        }
        
        public System.Threading.Tasks.Task<string> TransferFund_Prin_Comm_VATAsync(string Acct_from, string Acct_to, double Tra_amt, int Expl_code, string Remark, string Req_code, string docnum, int identifier, string VATAccount, string commacct, decimal comm, decimal vat, int commexpl, int vatexpl)
        {
            return base.Channel.TransferFund_Prin_Comm_VATAsync(Acct_from, Acct_to, Tra_amt, Expl_code, Remark, Req_code, docnum, identifier, VATAccount, commacct, comm, vat, commexpl, vatexpl);
        }
        
        public System.Threading.Tasks.Task<string> CheckFirstTimeAsync(string userid, string Acct_to, decimal Amount)
        {
            return base.Channel.CheckFirstTimeAsync(userid, Acct_to, Amount);
        }
        
        public System.Threading.Tasks.Task<string> TransferAsync(string Acct_fro, string Acct_to, double Amount, int expl_code, string Remarks)
        {
            return base.Channel.TransferAsync(Acct_fro, Acct_to, Amount, expl_code, Remarks);
        }
        
        public System.Threading.Tasks.Task<string> TransferFund_CrossAsync(string Acct_fro, string Acct_to, double Amount, double rate, double crossrate, string type, string channel, string Remarks)
        {
            return base.Channel.TransferFund_CrossAsync(Acct_fro, Acct_to, Amount, rate, crossrate, type, channel, Remarks);
        }
        
        public System.Threading.Tasks.Task<string> TransferChequesAsync(string Acct_fro, string Acct_to, double Amount, string type, string channel, string Remarks, string docnum, short identifier, short bankcode, short days)
        {
            return base.Channel.TransferChequesAsync(Acct_fro, Acct_to, Amount, type, channel, Remarks, docnum, identifier, bankcode, days);
        }
        
        public System.Threading.Tasks.Task<string> TransferGTBChequesAsync(string Acct_fro, string Acct_to, double Amount, string type, string channel, string Remarks, string docnum, short identifier, short bankcode, short days)
        {
            return base.Channel.TransferGTBChequesAsync(Acct_fro, Acct_to, Amount, type, channel, Remarks, docnum, identifier, bankcode, days);
        }
        
        public System.Threading.Tasks.Task<string> SendSMSAsync(string strmessage, string strMobNum)
        {
            return base.Channel.SendSMSAsync(strmessage, strMobNum);
        }
        
        public System.Threading.Tasks.Task<string> SendEmail1Async(string sender, string recipient, string EmSuj, string EmMsg)
        {
            return base.Channel.SendEmail1Async(sender, recipient, EmSuj, EmMsg);
        }
        
        public System.Threading.Tasks.Task<string> SendEmail2Async(string sender, string recipient, string EmSuj, string EmMsg, string copy)
        {
            return base.Channel.SendEmail2Async(sender, recipient, EmSuj, EmMsg, copy);
        }
        
        public System.Threading.Tasks.Task<string> SendSMS2Async(string strmessage, string strMobNum, string Application, string SenderName)
        {
            return base.Channel.SendSMS2Async(strmessage, strMobNum, Application, SenderName);
        }
        
        public System.Threading.Tasks.Task<string> SendEmailAsync(string subject, string mailmessage, string emailfrom, string emailto, string CCopy, string attachment)
        {
            return base.Channel.SendEmailAsync(subject, mailmessage, emailfrom, emailto, CCopy, attachment);
        }
        
        public System.Threading.Tasks.Task<string> SendEmail_HTMLAsync(string subject, string mailmessage, string emailfrom, string emailto, string CCopy, string attachment)
        {
            return base.Channel.SendEmail_HTMLAsync(subject, mailmessage, emailfrom, emailto, CCopy, attachment);
        }
        
        public System.Threading.Tasks.Task<string> ResetUserPasscodeAsync(string userid)
        {
            return base.Channel.ResetUserPasscodeAsync(userid);
        }
        
        public System.Threading.Tasks.Task<string> ResetUserPasscodeOtherAsync(string userid)
        {
            return base.Channel.ResetUserPasscodeOtherAsync(userid);
        }
        
        public System.Threading.Tasks.Task<string> ChangeUserPasscodeAsync(string userid, string pass)
        {
            return base.Channel.ChangeUserPasscodeAsync(userid, pass);
        }
        
        public System.Threading.Tasks.Task<string> ChangeAdminUserPasscodeAsync(string userid, string pswd)
        {
            return base.Channel.ChangeAdminUserPasscodeAsync(userid, pswd);
        }
        
        public System.Threading.Tasks.Task<string> GetApplicationRoleUsersAsync(int roleid, int appid)
        {
            return base.Channel.GetApplicationRoleUsersAsync(roleid, appid);
        }
        
        public System.Threading.Tasks.Task<string> GetAdminUserNameAsync(string uid)
        {
            return base.Channel.GetAdminUserNameAsync(uid);
        }
        
        public System.Threading.Tasks.Task<string> GetCustomerDetailsAsync(string userid)
        {
            return base.Channel.GetCustomerDetailsAsync(userid);
        }
        
        public System.Threading.Tasks.Task<string> ValidateAccountAsync(string userid, string acctno)
        {
            return base.Channel.ValidateAccountAsync(userid, acctno);
        }
        
        public System.Threading.Tasks.Task<string> ValidateBASISAccountAsync(string acctno)
        {
            return base.Channel.ValidateBASISAccountAsync(acctno);
        }
        
        public System.Threading.Tasks.Task<string> CheckUserFlagAsync(string uid)
        {
            return base.Channel.CheckUserFlagAsync(uid);
        }
        
        public System.Threading.Tasks.Task<string> CheckBatchRunAsync()
        {
            return base.Channel.CheckBatchRunAsync();
        }
        
        public System.Threading.Tasks.Task<string> ResetUserFlagAsync(string uid)
        {
            return base.Channel.ResetUserFlagAsync(uid);
        }
        
        public System.Threading.Tasks.Task<string> EncryptDataAsync(string datavalue, string key)
        {
            return base.Channel.EncryptDataAsync(datavalue, key);
        }
        
        public System.Threading.Tasks.Task<string> DecryptDataAsync(string datavalue, string key)
        {
            return base.Channel.DecryptDataAsync(datavalue, key);
        }
        
        public System.Threading.Tasks.Task<string> TransferCTIAsync(string IVRINFO, string CHANID)
        {
            return base.Channel.TransferCTIAsync(IVRINFO, CHANID);
        }
        
        public System.Threading.Tasks.Task<string> InitiatePopupAsync(string customerno, string IVRINFO)
        {
            return base.Channel.InitiatePopupAsync(customerno, IVRINFO);
        }
        
        public System.Threading.Tasks.Task<string> GetIVRINFOAsync(string customerno)
        {
            return base.Channel.GetIVRINFOAsync(customerno);
        }
        
        public System.Threading.Tasks.Task<string> GetIVRINFO2Async(string customerno)
        {
            return base.Channel.GetIVRINFO2Async(customerno);
        }
        
        public System.Threading.Tasks.Task<string> DeleteIVRINFOAsync(string customerno)
        {
            return base.Channel.DeleteIVRINFOAsync(customerno);
        }
        
        public System.Threading.Tasks.Task<string> StartCTIAsync(string CHANID)
        {
            return base.Channel.StartCTIAsync(CHANID);
        }
        
        public System.Threading.Tasks.Task<string> LogAdminUserActionAsync(int AppID, string userid, long staffid, string Action)
        {
            return base.Channel.LogAdminUserActionAsync(AppID, userid, staffid, Action);
        }
        
        public System.Threading.Tasks.Task<string> AddNewAdminUserAsync(string UserID, int BASISID, string Username, string staffid, string password, int branch_code, string emailaddress, string roleid, string status)
        {
            return base.Channel.AddNewAdminUserAsync(UserID, BASISID, Username, staffid, password, branch_code, emailaddress, roleid, status);
        }
        
        public System.Threading.Tasks.Task<string> UpdateAdminUserAsync(string UserID, int BASISID, string Username, string staffid, int branch_code, string emailaddress, string roleid)
        {
            return base.Channel.UpdateAdminUserAsync(UserID, BASISID, Username, staffid, branch_code, emailaddress, roleid);
        }
        
        public System.Threading.Tasks.Task<string> GetAdminUserDetailsAsync(string UserID)
        {
            return base.Channel.GetAdminUserDetailsAsync(UserID);
        }
        
        public System.Threading.Tasks.Task<string> SearchAdminUserAsync(string str)
        {
            return base.Channel.SearchAdminUserAsync(str);
        }
        
        public System.Threading.Tasks.Task<string> GetAllRolesAsync()
        {
            return base.Channel.GetAllRolesAsync();
        }
        
        public System.Threading.Tasks.Task<string> GetAllAdminUsersAsync()
        {
            return base.Channel.GetAllAdminUsersAsync();
        }
        
        public System.Threading.Tasks.Task<string> GetAllBranchesAsync()
        {
            return base.Channel.GetAllBranchesAsync();
        }
        
        public System.Threading.Tasks.Task<string> ActivateAdminUserAsync(string userid)
        {
            return base.Channel.ActivateAdminUserAsync(userid);
        }
        
        public System.Threading.Tasks.Task<string> DeactivateAdminUserAsync(string userid)
        {
            return base.Channel.DeactivateAdminUserAsync(userid);
        }
        
        public System.Threading.Tasks.Task<string> GetTellerTillAcctAsync(string userid, int appid)
        {
            return base.Channel.GetTellerTillAcctAsync(userid, appid);
        }
        
        public System.Threading.Tasks.Task<string> GetBranchInfoAsync(string bcode)
        {
            return base.Channel.GetBranchInfoAsync(bcode);
        }
        
        public System.Threading.Tasks.Task<string> GetBasisTellerTillAcctAsync(string bracode, string tellerid, string currency)
        {
            return base.Channel.GetBasisTellerTillAcctAsync(bracode, tellerid, currency);
        }
        
        public System.Threading.Tasks.Task<string> GetBasisTellerTillAcct2Async(string username, string bracode, string currency)
        {
            return base.Channel.GetBasisTellerTillAcct2Async(username, bracode, currency);
        }
        
        public System.Threading.Tasks.Task<string> GetZoneAcctAsync(int branch_code, int appid)
        {
            return base.Channel.GetZoneAcctAsync(branch_code, appid);
        }
        
        public System.Threading.Tasks.Task<string> GetBranchAcctAsync(string userid, int appid)
        {
            return base.Channel.GetBranchAcctAsync(userid, appid);
        }
        
        public System.Threading.Tasks.Task<string> GetBranchIPAddressAsync(string bracode)
        {
            return base.Channel.GetBranchIPAddressAsync(bracode);
        }
        
        public System.Threading.Tasks.Task<string> GetBranchIPAddress2Async(string userid)
        {
            return base.Channel.GetBranchIPAddress2Async(userid);
        }
        
        public System.Threading.Tasks.Task<string> GetAdminUserBranchIPAndLocationAsync(string userid, string locationIP)
        {
            return base.Channel.GetAdminUserBranchIPAndLocationAsync(userid, locationIP);
        }
        
        public System.Threading.Tasks.Task<string> GetAllBasisRolesAsync()
        {
            return base.Channel.GetAllBasisRolesAsync();
        }
        
        public System.Threading.Tasks.Task<AppDevService.CustDetRetVal> GetBasisCustomerDetailsAsync(int branch_code, int Customer_no)
        {
            return base.Channel.GetBasisCustomerDetailsAsync(branch_code, Customer_no);
        }
        
        public System.Threading.Tasks.Task<string> GetAllBasisUsersAsync()
        {
            return base.Channel.GetAllBasisUsersAsync();
        }
        
        public System.Threading.Tasks.Task<string> AddEoneRoleAsync(string role_desc)
        {
            return base.Channel.AddEoneRoleAsync(role_desc);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.AppDevServiceSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.AppDevServiceSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpsTransportBindingElement httpsBindingElement = new System.ServiceModel.Channels.HttpsTransportBindingElement();
                httpsBindingElement.AllowCookies = true;
                httpsBindingElement.MaxBufferSize = int.MaxValue;
                httpsBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpsBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.AppDevServiceSoap))
            {
                return new System.ServiceModel.EndpointAddress("https://gtweb6.gtbank.com/GTBTECHAPPDEV_LASTLIVE/AppDevService.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.AppDevServiceSoap12))
            {
                return new System.ServiceModel.EndpointAddress("https://gtweb6.gtbank.com/GTBTECHAPPDEV_LASTLIVE/AppDevService.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            AppDevServiceSoap,
            
            AppDevServiceSoap12,
        }
    }
    
    [System.Xml.Serialization.XmlSchemaProviderAttribute(null, IsAny=true)]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil-lib", "2.1.0.0")]
    public partial class ArrayOfXElement : object, System.Xml.Serialization.IXmlSerializable
    {
        
        private System.Collections.Generic.List<System.Xml.Linq.XElement> nodesList = new System.Collections.Generic.List<System.Xml.Linq.XElement>();
        
        public ArrayOfXElement()
        {
        }
        
        public virtual System.Collections.Generic.List<System.Xml.Linq.XElement> Nodes
        {
            get
            {
                return this.nodesList;
            }
        }
        
        public virtual System.Xml.Schema.XmlSchema GetSchema()
        {
            throw new System.NotImplementedException();
        }
        
        public virtual void WriteXml(System.Xml.XmlWriter writer)
        {
            System.Collections.Generic.IEnumerator<System.Xml.Linq.XElement> e = nodesList.GetEnumerator();
            for (
            ; e.MoveNext(); 
            )
            {
                ((System.Xml.Serialization.IXmlSerializable)(e.Current)).WriteXml(writer);
            }
        }
        
        public virtual void ReadXml(System.Xml.XmlReader reader)
        {
            for (
            ; (reader.NodeType != System.Xml.XmlNodeType.EndElement); 
            )
            {
                if ((reader.NodeType == System.Xml.XmlNodeType.Element))
                {
                    System.Xml.Linq.XElement elem = new System.Xml.Linq.XElement("default");
                    ((System.Xml.Serialization.IXmlSerializable)(elem)).ReadXml(reader);
                    Nodes.Add(elem);
                }
                else
                {
                    reader.Skip();
                }
            }
        }
    }
}
